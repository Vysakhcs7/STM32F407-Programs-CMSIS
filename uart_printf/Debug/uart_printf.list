
uart_printf.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000139c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a0  0800154c  0800154c  0001154c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015ec  080015ec  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080015ec  080015ec  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015ec  080015ec  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015ec  080015ec  000115ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015f0  080015f0  000115f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080015f4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000030  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000094  20000094  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000d4f  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000041f  00000000  00000000  00020de3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000140  00000000  00000000  00021208  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000108  00000000  00000000  00021348  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019bf1  00000000  00000000  00021450  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000014a4  00000000  00000000  0003b041  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008cfbf  00000000  00000000  0003c4e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000c94a4  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000c10  00000000  00000000  000c94f4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001534 	.word	0x08001534

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	08001534 	.word	0x08001534

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__io_putchar>:
static uint16_t compute_uart_bd(uint32_t periph_clk,uint32_t baudrate);
static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t periph_clk,uint32_t baudrate);
void uart2_write(int ch);
void delay(void);
int __io_putchar(int ch)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	b082      	sub	sp, #8
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000298:	6878      	ldr	r0, [r7, #4]
 800029a:	f000 f88f 	bl	80003bc <uart2_write>
	return ch;
 800029e:	687b      	ldr	r3, [r7, #4]
}
 80002a0:	4618      	mov	r0, r3
 80002a2:	3708      	adds	r7, #8
 80002a4:	46bd      	mov	sp, r7
 80002a6:	bd80      	pop	{r7, pc}

080002a8 <main>:

int main(void)
{
 80002a8:	b580      	push	{r7, lr}
 80002aa:	af00      	add	r7, sp, #0
	 uart_tx_init();
 80002ac:	f000 f808 	bl	80002c0 <uart_tx_init>


	while(1)
	{
		printf("hello\n\r");
 80002b0:	4802      	ldr	r0, [pc, #8]	; (80002bc <main+0x14>)
 80002b2:	f000 f9b1 	bl	8000618 <iprintf>
		delay();
 80002b6:	f000 f899 	bl	80003ec <delay>
		printf("hello\n\r");
 80002ba:	e7f9      	b.n	80002b0 <main+0x8>
 80002bc:	0800154c 	.word	0x0800154c

080002c0 <uart_tx_init>:
return 0;
}


void uart_tx_init(void)
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	af00      	add	r7, sp, #0
	//configure uart gpio pin

	 //Enable clock access to GPIOD
	RCC->AHB1ENR |= GPIODEN;
 80002c4:	4b26      	ldr	r3, [pc, #152]	; (8000360 <uart_tx_init+0xa0>)
 80002c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c8:	4a25      	ldr	r2, [pc, #148]	; (8000360 <uart_tx_init+0xa0>)
 80002ca:	f043 0308 	orr.w	r3, r3, #8
 80002ce:	6313      	str	r3, [r2, #48]	; 0x30
	 //set pd5 and pd6 to alternate fn mode
	 GPIOD->MODER |= (1 << 11);
 80002d0:	4b24      	ldr	r3, [pc, #144]	; (8000364 <uart_tx_init+0xa4>)
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	4a23      	ldr	r2, [pc, #140]	; (8000364 <uart_tx_init+0xa4>)
 80002d6:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80002da:	6013      	str	r3, [r2, #0]
	 GPIOD->MODER &= ~(1 << 10);
 80002dc:	4b21      	ldr	r3, [pc, #132]	; (8000364 <uart_tx_init+0xa4>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	4a20      	ldr	r2, [pc, #128]	; (8000364 <uart_tx_init+0xa4>)
 80002e2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80002e6:	6013      	str	r3, [r2, #0]

	 GPIOD->MODER |= (1 << 13);
 80002e8:	4b1e      	ldr	r3, [pc, #120]	; (8000364 <uart_tx_init+0xa4>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	4a1d      	ldr	r2, [pc, #116]	; (8000364 <uart_tx_init+0xa4>)
 80002ee:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80002f2:	6013      	str	r3, [r2, #0]
	 GPIOD->MODER &= ~(1 << 12);
 80002f4:	4b1b      	ldr	r3, [pc, #108]	; (8000364 <uart_tx_init+0xa4>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	4a1a      	ldr	r2, [pc, #104]	; (8000364 <uart_tx_init+0xa4>)
 80002fa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80002fe:	6013      	str	r3, [r2, #0]
	 //set pd5 to alt fn type to uart tx
	GPIOD->AFR[0] &= ~(1 << 23);
 8000300:	4b18      	ldr	r3, [pc, #96]	; (8000364 <uart_tx_init+0xa4>)
 8000302:	6a1b      	ldr	r3, [r3, #32]
 8000304:	4a17      	ldr	r2, [pc, #92]	; (8000364 <uart_tx_init+0xa4>)
 8000306:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800030a:	6213      	str	r3, [r2, #32]
	GPIOD->AFR[0] |= (1 << 22) | (1 <<21) | (1 << 20);
 800030c:	4b15      	ldr	r3, [pc, #84]	; (8000364 <uart_tx_init+0xa4>)
 800030e:	6a1b      	ldr	r3, [r3, #32]
 8000310:	4a14      	ldr	r2, [pc, #80]	; (8000364 <uart_tx_init+0xa4>)
 8000312:	f443 03e0 	orr.w	r3, r3, #7340032	; 0x700000
 8000316:	6213      	str	r3, [r2, #32]

	GPIOD->AFR[0] &= ~(1 << 27);
 8000318:	4b12      	ldr	r3, [pc, #72]	; (8000364 <uart_tx_init+0xa4>)
 800031a:	6a1b      	ldr	r3, [r3, #32]
 800031c:	4a11      	ldr	r2, [pc, #68]	; (8000364 <uart_tx_init+0xa4>)
 800031e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8000322:	6213      	str	r3, [r2, #32]
	GPIOD->AFR[0] |= (1 << 26) | (1 <<25) | (1 << 24);
 8000324:	4b0f      	ldr	r3, [pc, #60]	; (8000364 <uart_tx_init+0xa4>)
 8000326:	6a1b      	ldr	r3, [r3, #32]
 8000328:	4a0e      	ldr	r2, [pc, #56]	; (8000364 <uart_tx_init+0xa4>)
 800032a:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 800032e:	6213      	str	r3, [r2, #32]


	//enable clock access to uart2
	 RCC->APB1ENR |= USART2EN; //Clock enabled
 8000330:	4b0b      	ldr	r3, [pc, #44]	; (8000360 <uart_tx_init+0xa0>)
 8000332:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000334:	4a0a      	ldr	r2, [pc, #40]	; (8000360 <uart_tx_init+0xa0>)
 8000336:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800033a:	6413      	str	r3, [r2, #64]	; 0x40

	 //configure baudrate
	 uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 800033c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000340:	4909      	ldr	r1, [pc, #36]	; (8000368 <uart_tx_init+0xa8>)
 8000342:	480a      	ldr	r0, [pc, #40]	; (800036c <uart_tx_init+0xac>)
 8000344:	f000 f814 	bl	8000370 <uart_set_baudrate>
	 //configrue transfer direction
	 USART2->CR1 =(1 << 3);
 8000348:	4b08      	ldr	r3, [pc, #32]	; (800036c <uart_tx_init+0xac>)
 800034a:	2208      	movs	r2, #8
 800034c:	60da      	str	r2, [r3, #12]
	 //enable uart module
	 USART2->CR1 |= (1 << 13);
 800034e:	4b07      	ldr	r3, [pc, #28]	; (800036c <uart_tx_init+0xac>)
 8000350:	68db      	ldr	r3, [r3, #12]
 8000352:	4a06      	ldr	r2, [pc, #24]	; (800036c <uart_tx_init+0xac>)
 8000354:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000358:	60d3      	str	r3, [r2, #12]


}
 800035a:	bf00      	nop
 800035c:	bd80      	pop	{r7, pc}
 800035e:	bf00      	nop
 8000360:	40023800 	.word	0x40023800
 8000364:	40020c00 	.word	0x40020c00
 8000368:	00f42400 	.word	0x00f42400
 800036c:	40004400 	.word	0x40004400

08000370 <uart_set_baudrate>:


static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t periph_clk,uint32_t baudrate)
{
 8000370:	b580      	push	{r7, lr}
 8000372:	b084      	sub	sp, #16
 8000374:	af00      	add	r7, sp, #0
 8000376:	60f8      	str	r0, [r7, #12]
 8000378:	60b9      	str	r1, [r7, #8]
 800037a:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(periph_clk,baudrate);
 800037c:	6879      	ldr	r1, [r7, #4]
 800037e:	68b8      	ldr	r0, [r7, #8]
 8000380:	f000 f808 	bl	8000394 <compute_uart_bd>
 8000384:	4603      	mov	r3, r0
 8000386:	461a      	mov	r2, r3
 8000388:	68fb      	ldr	r3, [r7, #12]
 800038a:	609a      	str	r2, [r3, #8]
}
 800038c:	bf00      	nop
 800038e:	3710      	adds	r7, #16
 8000390:	46bd      	mov	sp, r7
 8000392:	bd80      	pop	{r7, pc}

08000394 <compute_uart_bd>:
static uint16_t compute_uart_bd(uint32_t periph_clk,uint32_t baudrate)
{
 8000394:	b480      	push	{r7}
 8000396:	b083      	sub	sp, #12
 8000398:	af00      	add	r7, sp, #0
 800039a:	6078      	str	r0, [r7, #4]
 800039c:	6039      	str	r1, [r7, #0]
	return ( (periph_clk + (baudrate/2U))/baudrate);
 800039e:	683b      	ldr	r3, [r7, #0]
 80003a0:	085a      	lsrs	r2, r3, #1
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	441a      	add	r2, r3
 80003a6:	683b      	ldr	r3, [r7, #0]
 80003a8:	fbb2 f3f3 	udiv	r3, r2, r3
 80003ac:	b29b      	uxth	r3, r3
}
 80003ae:	4618      	mov	r0, r3
 80003b0:	370c      	adds	r7, #12
 80003b2:	46bd      	mov	sp, r7
 80003b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b8:	4770      	bx	lr
	...

080003bc <uart2_write>:

void uart2_write(int ch)
{
 80003bc:	b480      	push	{r7}
 80003be:	b083      	sub	sp, #12
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	6078      	str	r0, [r7, #4]
	//Make sure the transmit data register is empty

	while (!(USART2->SR  & (1 << 7))){}
 80003c4:	bf00      	nop
 80003c6:	4b08      	ldr	r3, [pc, #32]	; (80003e8 <uart2_write+0x2c>)
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d0f9      	beq.n	80003c6 <uart2_write+0xa>
	//Write to transmit data reigster

	USART2->DR = (ch & 0xFF);
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	4a04      	ldr	r2, [pc, #16]	; (80003e8 <uart2_write+0x2c>)
 80003d6:	b2db      	uxtb	r3, r3
 80003d8:	6053      	str	r3, [r2, #4]
}
 80003da:	bf00      	nop
 80003dc:	370c      	adds	r7, #12
 80003de:	46bd      	mov	sp, r7
 80003e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e4:	4770      	bx	lr
 80003e6:	bf00      	nop
 80003e8:	40004400 	.word	0x40004400

080003ec <delay>:

void delay(void) {
 80003ec:	b480      	push	{r7}
 80003ee:	b083      	sub	sp, #12
 80003f0:	af00      	add	r7, sp, #0
	int i = 0;
 80003f2:	2300      	movs	r3, #0
 80003f4:	607b      	str	r3, [r7, #4]
	for (i = 0; i < 50000; i++);
 80003f6:	2300      	movs	r3, #0
 80003f8:	607b      	str	r3, [r7, #4]
 80003fa:	e002      	b.n	8000402 <delay+0x16>
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	3301      	adds	r3, #1
 8000400:	607b      	str	r3, [r7, #4]
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	f24c 324f 	movw	r2, #49999	; 0xc34f
 8000408:	4293      	cmp	r3, r2
 800040a:	ddf7      	ble.n	80003fc <delay+0x10>
}
 800040c:	bf00      	nop
 800040e:	bf00      	nop
 8000410:	370c      	adds	r7, #12
 8000412:	46bd      	mov	sp, r7
 8000414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000418:	4770      	bx	lr

0800041a <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800041a:	b580      	push	{r7, lr}
 800041c:	b086      	sub	sp, #24
 800041e:	af00      	add	r7, sp, #0
 8000420:	60f8      	str	r0, [r7, #12]
 8000422:	60b9      	str	r1, [r7, #8]
 8000424:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000426:	2300      	movs	r3, #0
 8000428:	617b      	str	r3, [r7, #20]
 800042a:	e00a      	b.n	8000442 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800042c:	f3af 8000 	nop.w
 8000430:	4601      	mov	r1, r0
 8000432:	68bb      	ldr	r3, [r7, #8]
 8000434:	1c5a      	adds	r2, r3, #1
 8000436:	60ba      	str	r2, [r7, #8]
 8000438:	b2ca      	uxtb	r2, r1
 800043a:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800043c:	697b      	ldr	r3, [r7, #20]
 800043e:	3301      	adds	r3, #1
 8000440:	617b      	str	r3, [r7, #20]
 8000442:	697a      	ldr	r2, [r7, #20]
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	429a      	cmp	r2, r3
 8000448:	dbf0      	blt.n	800042c <_read+0x12>
  }

  return len;
 800044a:	687b      	ldr	r3, [r7, #4]
}
 800044c:	4618      	mov	r0, r3
 800044e:	3718      	adds	r7, #24
 8000450:	46bd      	mov	sp, r7
 8000452:	bd80      	pop	{r7, pc}

08000454 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000454:	b580      	push	{r7, lr}
 8000456:	b086      	sub	sp, #24
 8000458:	af00      	add	r7, sp, #0
 800045a:	60f8      	str	r0, [r7, #12]
 800045c:	60b9      	str	r1, [r7, #8]
 800045e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000460:	2300      	movs	r3, #0
 8000462:	617b      	str	r3, [r7, #20]
 8000464:	e009      	b.n	800047a <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000466:	68bb      	ldr	r3, [r7, #8]
 8000468:	1c5a      	adds	r2, r3, #1
 800046a:	60ba      	str	r2, [r7, #8]
 800046c:	781b      	ldrb	r3, [r3, #0]
 800046e:	4618      	mov	r0, r3
 8000470:	f7ff ff0e 	bl	8000290 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000474:	697b      	ldr	r3, [r7, #20]
 8000476:	3301      	adds	r3, #1
 8000478:	617b      	str	r3, [r7, #20]
 800047a:	697a      	ldr	r2, [r7, #20]
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	429a      	cmp	r2, r3
 8000480:	dbf1      	blt.n	8000466 <_write+0x12>
  }
  return len;
 8000482:	687b      	ldr	r3, [r7, #4]
}
 8000484:	4618      	mov	r0, r3
 8000486:	3718      	adds	r7, #24
 8000488:	46bd      	mov	sp, r7
 800048a:	bd80      	pop	{r7, pc}

0800048c <_close>:

int _close(int file)
{
 800048c:	b480      	push	{r7}
 800048e:	b083      	sub	sp, #12
 8000490:	af00      	add	r7, sp, #0
 8000492:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000494:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000498:	4618      	mov	r0, r3
 800049a:	370c      	adds	r7, #12
 800049c:	46bd      	mov	sp, r7
 800049e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a2:	4770      	bx	lr

080004a4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004a4:	b480      	push	{r7}
 80004a6:	b083      	sub	sp, #12
 80004a8:	af00      	add	r7, sp, #0
 80004aa:	6078      	str	r0, [r7, #4]
 80004ac:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80004ae:	683b      	ldr	r3, [r7, #0]
 80004b0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004b4:	605a      	str	r2, [r3, #4]
  return 0;
 80004b6:	2300      	movs	r3, #0
}
 80004b8:	4618      	mov	r0, r3
 80004ba:	370c      	adds	r7, #12
 80004bc:	46bd      	mov	sp, r7
 80004be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c2:	4770      	bx	lr

080004c4 <_isatty>:

int _isatty(int file)
{
 80004c4:	b480      	push	{r7}
 80004c6:	b083      	sub	sp, #12
 80004c8:	af00      	add	r7, sp, #0
 80004ca:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80004cc:	2301      	movs	r3, #1
}
 80004ce:	4618      	mov	r0, r3
 80004d0:	370c      	adds	r7, #12
 80004d2:	46bd      	mov	sp, r7
 80004d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d8:	4770      	bx	lr

080004da <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004da:	b480      	push	{r7}
 80004dc:	b085      	sub	sp, #20
 80004de:	af00      	add	r7, sp, #0
 80004e0:	60f8      	str	r0, [r7, #12]
 80004e2:	60b9      	str	r1, [r7, #8]
 80004e4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004e6:	2300      	movs	r3, #0
}
 80004e8:	4618      	mov	r0, r3
 80004ea:	3714      	adds	r7, #20
 80004ec:	46bd      	mov	sp, r7
 80004ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f2:	4770      	bx	lr

080004f4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b086      	sub	sp, #24
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004fc:	4a14      	ldr	r2, [pc, #80]	; (8000550 <_sbrk+0x5c>)
 80004fe:	4b15      	ldr	r3, [pc, #84]	; (8000554 <_sbrk+0x60>)
 8000500:	1ad3      	subs	r3, r2, r3
 8000502:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000504:	697b      	ldr	r3, [r7, #20]
 8000506:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000508:	4b13      	ldr	r3, [pc, #76]	; (8000558 <_sbrk+0x64>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	2b00      	cmp	r3, #0
 800050e:	d102      	bne.n	8000516 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000510:	4b11      	ldr	r3, [pc, #68]	; (8000558 <_sbrk+0x64>)
 8000512:	4a12      	ldr	r2, [pc, #72]	; (800055c <_sbrk+0x68>)
 8000514:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000516:	4b10      	ldr	r3, [pc, #64]	; (8000558 <_sbrk+0x64>)
 8000518:	681a      	ldr	r2, [r3, #0]
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	4413      	add	r3, r2
 800051e:	693a      	ldr	r2, [r7, #16]
 8000520:	429a      	cmp	r2, r3
 8000522:	d207      	bcs.n	8000534 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000524:	f000 f846 	bl	80005b4 <__errno>
 8000528:	4603      	mov	r3, r0
 800052a:	220c      	movs	r2, #12
 800052c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800052e:	f04f 33ff 	mov.w	r3, #4294967295
 8000532:	e009      	b.n	8000548 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000534:	4b08      	ldr	r3, [pc, #32]	; (8000558 <_sbrk+0x64>)
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800053a:	4b07      	ldr	r3, [pc, #28]	; (8000558 <_sbrk+0x64>)
 800053c:	681a      	ldr	r2, [r3, #0]
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	4413      	add	r3, r2
 8000542:	4a05      	ldr	r2, [pc, #20]	; (8000558 <_sbrk+0x64>)
 8000544:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000546:	68fb      	ldr	r3, [r7, #12]
}
 8000548:	4618      	mov	r0, r3
 800054a:	3718      	adds	r7, #24
 800054c:	46bd      	mov	sp, r7
 800054e:	bd80      	pop	{r7, pc}
 8000550:	20020000 	.word	0x20020000
 8000554:	00000400 	.word	0x00000400
 8000558:	20000080 	.word	0x20000080
 800055c:	20000098 	.word	0x20000098

08000560 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000560:	480d      	ldr	r0, [pc, #52]	; (8000598 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000562:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000564:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000568:	480c      	ldr	r0, [pc, #48]	; (800059c <LoopForever+0x6>)
  ldr r1, =_edata
 800056a:	490d      	ldr	r1, [pc, #52]	; (80005a0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800056c:	4a0d      	ldr	r2, [pc, #52]	; (80005a4 <LoopForever+0xe>)
  movs r3, #0
 800056e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000570:	e002      	b.n	8000578 <LoopCopyDataInit>

08000572 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000572:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000574:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000576:	3304      	adds	r3, #4

08000578 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000578:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800057a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800057c:	d3f9      	bcc.n	8000572 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800057e:	4a0a      	ldr	r2, [pc, #40]	; (80005a8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000580:	4c0a      	ldr	r4, [pc, #40]	; (80005ac <LoopForever+0x16>)
  movs r3, #0
 8000582:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000584:	e001      	b.n	800058a <LoopFillZerobss>

08000586 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000586:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000588:	3204      	adds	r2, #4

0800058a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800058a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800058c:	d3fb      	bcc.n	8000586 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800058e:	f000 f817 	bl	80005c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000592:	f7ff fe89 	bl	80002a8 <main>

08000596 <LoopForever>:

LoopForever:
  b LoopForever
 8000596:	e7fe      	b.n	8000596 <LoopForever>
  ldr   r0, =_estack
 8000598:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800059c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005a0:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005a4:	080015f4 	.word	0x080015f4
  ldr r2, =_sbss
 80005a8:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005ac:	20000094 	.word	0x20000094

080005b0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005b0:	e7fe      	b.n	80005b0 <ADC_IRQHandler>
	...

080005b4 <__errno>:
 80005b4:	4b01      	ldr	r3, [pc, #4]	; (80005bc <__errno+0x8>)
 80005b6:	6818      	ldr	r0, [r3, #0]
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop
 80005bc:	20000000 	.word	0x20000000

080005c0 <__libc_init_array>:
 80005c0:	b570      	push	{r4, r5, r6, lr}
 80005c2:	4d0d      	ldr	r5, [pc, #52]	; (80005f8 <__libc_init_array+0x38>)
 80005c4:	4c0d      	ldr	r4, [pc, #52]	; (80005fc <__libc_init_array+0x3c>)
 80005c6:	1b64      	subs	r4, r4, r5
 80005c8:	10a4      	asrs	r4, r4, #2
 80005ca:	2600      	movs	r6, #0
 80005cc:	42a6      	cmp	r6, r4
 80005ce:	d109      	bne.n	80005e4 <__libc_init_array+0x24>
 80005d0:	4d0b      	ldr	r5, [pc, #44]	; (8000600 <__libc_init_array+0x40>)
 80005d2:	4c0c      	ldr	r4, [pc, #48]	; (8000604 <__libc_init_array+0x44>)
 80005d4:	f000 ffae 	bl	8001534 <_init>
 80005d8:	1b64      	subs	r4, r4, r5
 80005da:	10a4      	asrs	r4, r4, #2
 80005dc:	2600      	movs	r6, #0
 80005de:	42a6      	cmp	r6, r4
 80005e0:	d105      	bne.n	80005ee <__libc_init_array+0x2e>
 80005e2:	bd70      	pop	{r4, r5, r6, pc}
 80005e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80005e8:	4798      	blx	r3
 80005ea:	3601      	adds	r6, #1
 80005ec:	e7ee      	b.n	80005cc <__libc_init_array+0xc>
 80005ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80005f2:	4798      	blx	r3
 80005f4:	3601      	adds	r6, #1
 80005f6:	e7f2      	b.n	80005de <__libc_init_array+0x1e>
 80005f8:	080015ec 	.word	0x080015ec
 80005fc:	080015ec 	.word	0x080015ec
 8000600:	080015ec 	.word	0x080015ec
 8000604:	080015f0 	.word	0x080015f0

08000608 <memset>:
 8000608:	4402      	add	r2, r0
 800060a:	4603      	mov	r3, r0
 800060c:	4293      	cmp	r3, r2
 800060e:	d100      	bne.n	8000612 <memset+0xa>
 8000610:	4770      	bx	lr
 8000612:	f803 1b01 	strb.w	r1, [r3], #1
 8000616:	e7f9      	b.n	800060c <memset+0x4>

08000618 <iprintf>:
 8000618:	b40f      	push	{r0, r1, r2, r3}
 800061a:	4b0a      	ldr	r3, [pc, #40]	; (8000644 <iprintf+0x2c>)
 800061c:	b513      	push	{r0, r1, r4, lr}
 800061e:	681c      	ldr	r4, [r3, #0]
 8000620:	b124      	cbz	r4, 800062c <iprintf+0x14>
 8000622:	69a3      	ldr	r3, [r4, #24]
 8000624:	b913      	cbnz	r3, 800062c <iprintf+0x14>
 8000626:	4620      	mov	r0, r4
 8000628:	f000 f866 	bl	80006f8 <__sinit>
 800062c:	ab05      	add	r3, sp, #20
 800062e:	9a04      	ldr	r2, [sp, #16]
 8000630:	68a1      	ldr	r1, [r4, #8]
 8000632:	9301      	str	r3, [sp, #4]
 8000634:	4620      	mov	r0, r4
 8000636:	f000 f9bd 	bl	80009b4 <_vfiprintf_r>
 800063a:	b002      	add	sp, #8
 800063c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000640:	b004      	add	sp, #16
 8000642:	4770      	bx	lr
 8000644:	20000000 	.word	0x20000000

08000648 <std>:
 8000648:	2300      	movs	r3, #0
 800064a:	b510      	push	{r4, lr}
 800064c:	4604      	mov	r4, r0
 800064e:	e9c0 3300 	strd	r3, r3, [r0]
 8000652:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000656:	6083      	str	r3, [r0, #8]
 8000658:	8181      	strh	r1, [r0, #12]
 800065a:	6643      	str	r3, [r0, #100]	; 0x64
 800065c:	81c2      	strh	r2, [r0, #14]
 800065e:	6183      	str	r3, [r0, #24]
 8000660:	4619      	mov	r1, r3
 8000662:	2208      	movs	r2, #8
 8000664:	305c      	adds	r0, #92	; 0x5c
 8000666:	f7ff ffcf 	bl	8000608 <memset>
 800066a:	4b05      	ldr	r3, [pc, #20]	; (8000680 <std+0x38>)
 800066c:	6263      	str	r3, [r4, #36]	; 0x24
 800066e:	4b05      	ldr	r3, [pc, #20]	; (8000684 <std+0x3c>)
 8000670:	62a3      	str	r3, [r4, #40]	; 0x28
 8000672:	4b05      	ldr	r3, [pc, #20]	; (8000688 <std+0x40>)
 8000674:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000676:	4b05      	ldr	r3, [pc, #20]	; (800068c <std+0x44>)
 8000678:	6224      	str	r4, [r4, #32]
 800067a:	6323      	str	r3, [r4, #48]	; 0x30
 800067c:	bd10      	pop	{r4, pc}
 800067e:	bf00      	nop
 8000680:	08000f5d 	.word	0x08000f5d
 8000684:	08000f7f 	.word	0x08000f7f
 8000688:	08000fb7 	.word	0x08000fb7
 800068c:	08000fdb 	.word	0x08000fdb

08000690 <_cleanup_r>:
 8000690:	4901      	ldr	r1, [pc, #4]	; (8000698 <_cleanup_r+0x8>)
 8000692:	f000 b8af 	b.w	80007f4 <_fwalk_reent>
 8000696:	bf00      	nop
 8000698:	080012b5 	.word	0x080012b5

0800069c <__sfmoreglue>:
 800069c:	b570      	push	{r4, r5, r6, lr}
 800069e:	2268      	movs	r2, #104	; 0x68
 80006a0:	1e4d      	subs	r5, r1, #1
 80006a2:	4355      	muls	r5, r2
 80006a4:	460e      	mov	r6, r1
 80006a6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80006aa:	f000 f8e5 	bl	8000878 <_malloc_r>
 80006ae:	4604      	mov	r4, r0
 80006b0:	b140      	cbz	r0, 80006c4 <__sfmoreglue+0x28>
 80006b2:	2100      	movs	r1, #0
 80006b4:	e9c0 1600 	strd	r1, r6, [r0]
 80006b8:	300c      	adds	r0, #12
 80006ba:	60a0      	str	r0, [r4, #8]
 80006bc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80006c0:	f7ff ffa2 	bl	8000608 <memset>
 80006c4:	4620      	mov	r0, r4
 80006c6:	bd70      	pop	{r4, r5, r6, pc}

080006c8 <__sfp_lock_acquire>:
 80006c8:	4801      	ldr	r0, [pc, #4]	; (80006d0 <__sfp_lock_acquire+0x8>)
 80006ca:	f000 b8b3 	b.w	8000834 <__retarget_lock_acquire_recursive>
 80006ce:	bf00      	nop
 80006d0:	20000085 	.word	0x20000085

080006d4 <__sfp_lock_release>:
 80006d4:	4801      	ldr	r0, [pc, #4]	; (80006dc <__sfp_lock_release+0x8>)
 80006d6:	f000 b8ae 	b.w	8000836 <__retarget_lock_release_recursive>
 80006da:	bf00      	nop
 80006dc:	20000085 	.word	0x20000085

080006e0 <__sinit_lock_acquire>:
 80006e0:	4801      	ldr	r0, [pc, #4]	; (80006e8 <__sinit_lock_acquire+0x8>)
 80006e2:	f000 b8a7 	b.w	8000834 <__retarget_lock_acquire_recursive>
 80006e6:	bf00      	nop
 80006e8:	20000086 	.word	0x20000086

080006ec <__sinit_lock_release>:
 80006ec:	4801      	ldr	r0, [pc, #4]	; (80006f4 <__sinit_lock_release+0x8>)
 80006ee:	f000 b8a2 	b.w	8000836 <__retarget_lock_release_recursive>
 80006f2:	bf00      	nop
 80006f4:	20000086 	.word	0x20000086

080006f8 <__sinit>:
 80006f8:	b510      	push	{r4, lr}
 80006fa:	4604      	mov	r4, r0
 80006fc:	f7ff fff0 	bl	80006e0 <__sinit_lock_acquire>
 8000700:	69a3      	ldr	r3, [r4, #24]
 8000702:	b11b      	cbz	r3, 800070c <__sinit+0x14>
 8000704:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000708:	f7ff bff0 	b.w	80006ec <__sinit_lock_release>
 800070c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000710:	6523      	str	r3, [r4, #80]	; 0x50
 8000712:	4b13      	ldr	r3, [pc, #76]	; (8000760 <__sinit+0x68>)
 8000714:	4a13      	ldr	r2, [pc, #76]	; (8000764 <__sinit+0x6c>)
 8000716:	681b      	ldr	r3, [r3, #0]
 8000718:	62a2      	str	r2, [r4, #40]	; 0x28
 800071a:	42a3      	cmp	r3, r4
 800071c:	bf04      	itt	eq
 800071e:	2301      	moveq	r3, #1
 8000720:	61a3      	streq	r3, [r4, #24]
 8000722:	4620      	mov	r0, r4
 8000724:	f000 f820 	bl	8000768 <__sfp>
 8000728:	6060      	str	r0, [r4, #4]
 800072a:	4620      	mov	r0, r4
 800072c:	f000 f81c 	bl	8000768 <__sfp>
 8000730:	60a0      	str	r0, [r4, #8]
 8000732:	4620      	mov	r0, r4
 8000734:	f000 f818 	bl	8000768 <__sfp>
 8000738:	2200      	movs	r2, #0
 800073a:	60e0      	str	r0, [r4, #12]
 800073c:	2104      	movs	r1, #4
 800073e:	6860      	ldr	r0, [r4, #4]
 8000740:	f7ff ff82 	bl	8000648 <std>
 8000744:	68a0      	ldr	r0, [r4, #8]
 8000746:	2201      	movs	r2, #1
 8000748:	2109      	movs	r1, #9
 800074a:	f7ff ff7d 	bl	8000648 <std>
 800074e:	68e0      	ldr	r0, [r4, #12]
 8000750:	2202      	movs	r2, #2
 8000752:	2112      	movs	r1, #18
 8000754:	f7ff ff78 	bl	8000648 <std>
 8000758:	2301      	movs	r3, #1
 800075a:	61a3      	str	r3, [r4, #24]
 800075c:	e7d2      	b.n	8000704 <__sinit+0xc>
 800075e:	bf00      	nop
 8000760:	08001554 	.word	0x08001554
 8000764:	08000691 	.word	0x08000691

08000768 <__sfp>:
 8000768:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800076a:	4607      	mov	r7, r0
 800076c:	f7ff ffac 	bl	80006c8 <__sfp_lock_acquire>
 8000770:	4b1e      	ldr	r3, [pc, #120]	; (80007ec <__sfp+0x84>)
 8000772:	681e      	ldr	r6, [r3, #0]
 8000774:	69b3      	ldr	r3, [r6, #24]
 8000776:	b913      	cbnz	r3, 800077e <__sfp+0x16>
 8000778:	4630      	mov	r0, r6
 800077a:	f7ff ffbd 	bl	80006f8 <__sinit>
 800077e:	3648      	adds	r6, #72	; 0x48
 8000780:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000784:	3b01      	subs	r3, #1
 8000786:	d503      	bpl.n	8000790 <__sfp+0x28>
 8000788:	6833      	ldr	r3, [r6, #0]
 800078a:	b30b      	cbz	r3, 80007d0 <__sfp+0x68>
 800078c:	6836      	ldr	r6, [r6, #0]
 800078e:	e7f7      	b.n	8000780 <__sfp+0x18>
 8000790:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000794:	b9d5      	cbnz	r5, 80007cc <__sfp+0x64>
 8000796:	4b16      	ldr	r3, [pc, #88]	; (80007f0 <__sfp+0x88>)
 8000798:	60e3      	str	r3, [r4, #12]
 800079a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800079e:	6665      	str	r5, [r4, #100]	; 0x64
 80007a0:	f000 f847 	bl	8000832 <__retarget_lock_init_recursive>
 80007a4:	f7ff ff96 	bl	80006d4 <__sfp_lock_release>
 80007a8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80007ac:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80007b0:	6025      	str	r5, [r4, #0]
 80007b2:	61a5      	str	r5, [r4, #24]
 80007b4:	2208      	movs	r2, #8
 80007b6:	4629      	mov	r1, r5
 80007b8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80007bc:	f7ff ff24 	bl	8000608 <memset>
 80007c0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80007c4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80007c8:	4620      	mov	r0, r4
 80007ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007cc:	3468      	adds	r4, #104	; 0x68
 80007ce:	e7d9      	b.n	8000784 <__sfp+0x1c>
 80007d0:	2104      	movs	r1, #4
 80007d2:	4638      	mov	r0, r7
 80007d4:	f7ff ff62 	bl	800069c <__sfmoreglue>
 80007d8:	4604      	mov	r4, r0
 80007da:	6030      	str	r0, [r6, #0]
 80007dc:	2800      	cmp	r0, #0
 80007de:	d1d5      	bne.n	800078c <__sfp+0x24>
 80007e0:	f7ff ff78 	bl	80006d4 <__sfp_lock_release>
 80007e4:	230c      	movs	r3, #12
 80007e6:	603b      	str	r3, [r7, #0]
 80007e8:	e7ee      	b.n	80007c8 <__sfp+0x60>
 80007ea:	bf00      	nop
 80007ec:	08001554 	.word	0x08001554
 80007f0:	ffff0001 	.word	0xffff0001

080007f4 <_fwalk_reent>:
 80007f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007f8:	4606      	mov	r6, r0
 80007fa:	4688      	mov	r8, r1
 80007fc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000800:	2700      	movs	r7, #0
 8000802:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000806:	f1b9 0901 	subs.w	r9, r9, #1
 800080a:	d505      	bpl.n	8000818 <_fwalk_reent+0x24>
 800080c:	6824      	ldr	r4, [r4, #0]
 800080e:	2c00      	cmp	r4, #0
 8000810:	d1f7      	bne.n	8000802 <_fwalk_reent+0xe>
 8000812:	4638      	mov	r0, r7
 8000814:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000818:	89ab      	ldrh	r3, [r5, #12]
 800081a:	2b01      	cmp	r3, #1
 800081c:	d907      	bls.n	800082e <_fwalk_reent+0x3a>
 800081e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000822:	3301      	adds	r3, #1
 8000824:	d003      	beq.n	800082e <_fwalk_reent+0x3a>
 8000826:	4629      	mov	r1, r5
 8000828:	4630      	mov	r0, r6
 800082a:	47c0      	blx	r8
 800082c:	4307      	orrs	r7, r0
 800082e:	3568      	adds	r5, #104	; 0x68
 8000830:	e7e9      	b.n	8000806 <_fwalk_reent+0x12>

08000832 <__retarget_lock_init_recursive>:
 8000832:	4770      	bx	lr

08000834 <__retarget_lock_acquire_recursive>:
 8000834:	4770      	bx	lr

08000836 <__retarget_lock_release_recursive>:
 8000836:	4770      	bx	lr

08000838 <sbrk_aligned>:
 8000838:	b570      	push	{r4, r5, r6, lr}
 800083a:	4e0e      	ldr	r6, [pc, #56]	; (8000874 <sbrk_aligned+0x3c>)
 800083c:	460c      	mov	r4, r1
 800083e:	6831      	ldr	r1, [r6, #0]
 8000840:	4605      	mov	r5, r0
 8000842:	b911      	cbnz	r1, 800084a <sbrk_aligned+0x12>
 8000844:	f000 fb7a 	bl	8000f3c <_sbrk_r>
 8000848:	6030      	str	r0, [r6, #0]
 800084a:	4621      	mov	r1, r4
 800084c:	4628      	mov	r0, r5
 800084e:	f000 fb75 	bl	8000f3c <_sbrk_r>
 8000852:	1c43      	adds	r3, r0, #1
 8000854:	d00a      	beq.n	800086c <sbrk_aligned+0x34>
 8000856:	1cc4      	adds	r4, r0, #3
 8000858:	f024 0403 	bic.w	r4, r4, #3
 800085c:	42a0      	cmp	r0, r4
 800085e:	d007      	beq.n	8000870 <sbrk_aligned+0x38>
 8000860:	1a21      	subs	r1, r4, r0
 8000862:	4628      	mov	r0, r5
 8000864:	f000 fb6a 	bl	8000f3c <_sbrk_r>
 8000868:	3001      	adds	r0, #1
 800086a:	d101      	bne.n	8000870 <sbrk_aligned+0x38>
 800086c:	f04f 34ff 	mov.w	r4, #4294967295
 8000870:	4620      	mov	r0, r4
 8000872:	bd70      	pop	{r4, r5, r6, pc}
 8000874:	2000008c 	.word	0x2000008c

08000878 <_malloc_r>:
 8000878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800087c:	1ccd      	adds	r5, r1, #3
 800087e:	f025 0503 	bic.w	r5, r5, #3
 8000882:	3508      	adds	r5, #8
 8000884:	2d0c      	cmp	r5, #12
 8000886:	bf38      	it	cc
 8000888:	250c      	movcc	r5, #12
 800088a:	2d00      	cmp	r5, #0
 800088c:	4607      	mov	r7, r0
 800088e:	db01      	blt.n	8000894 <_malloc_r+0x1c>
 8000890:	42a9      	cmp	r1, r5
 8000892:	d905      	bls.n	80008a0 <_malloc_r+0x28>
 8000894:	230c      	movs	r3, #12
 8000896:	603b      	str	r3, [r7, #0]
 8000898:	2600      	movs	r6, #0
 800089a:	4630      	mov	r0, r6
 800089c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008a0:	4e2e      	ldr	r6, [pc, #184]	; (800095c <_malloc_r+0xe4>)
 80008a2:	f000 fdbb 	bl	800141c <__malloc_lock>
 80008a6:	6833      	ldr	r3, [r6, #0]
 80008a8:	461c      	mov	r4, r3
 80008aa:	bb34      	cbnz	r4, 80008fa <_malloc_r+0x82>
 80008ac:	4629      	mov	r1, r5
 80008ae:	4638      	mov	r0, r7
 80008b0:	f7ff ffc2 	bl	8000838 <sbrk_aligned>
 80008b4:	1c43      	adds	r3, r0, #1
 80008b6:	4604      	mov	r4, r0
 80008b8:	d14d      	bne.n	8000956 <_malloc_r+0xde>
 80008ba:	6834      	ldr	r4, [r6, #0]
 80008bc:	4626      	mov	r6, r4
 80008be:	2e00      	cmp	r6, #0
 80008c0:	d140      	bne.n	8000944 <_malloc_r+0xcc>
 80008c2:	6823      	ldr	r3, [r4, #0]
 80008c4:	4631      	mov	r1, r6
 80008c6:	4638      	mov	r0, r7
 80008c8:	eb04 0803 	add.w	r8, r4, r3
 80008cc:	f000 fb36 	bl	8000f3c <_sbrk_r>
 80008d0:	4580      	cmp	r8, r0
 80008d2:	d13a      	bne.n	800094a <_malloc_r+0xd2>
 80008d4:	6821      	ldr	r1, [r4, #0]
 80008d6:	3503      	adds	r5, #3
 80008d8:	1a6d      	subs	r5, r5, r1
 80008da:	f025 0503 	bic.w	r5, r5, #3
 80008de:	3508      	adds	r5, #8
 80008e0:	2d0c      	cmp	r5, #12
 80008e2:	bf38      	it	cc
 80008e4:	250c      	movcc	r5, #12
 80008e6:	4629      	mov	r1, r5
 80008e8:	4638      	mov	r0, r7
 80008ea:	f7ff ffa5 	bl	8000838 <sbrk_aligned>
 80008ee:	3001      	adds	r0, #1
 80008f0:	d02b      	beq.n	800094a <_malloc_r+0xd2>
 80008f2:	6823      	ldr	r3, [r4, #0]
 80008f4:	442b      	add	r3, r5
 80008f6:	6023      	str	r3, [r4, #0]
 80008f8:	e00e      	b.n	8000918 <_malloc_r+0xa0>
 80008fa:	6822      	ldr	r2, [r4, #0]
 80008fc:	1b52      	subs	r2, r2, r5
 80008fe:	d41e      	bmi.n	800093e <_malloc_r+0xc6>
 8000900:	2a0b      	cmp	r2, #11
 8000902:	d916      	bls.n	8000932 <_malloc_r+0xba>
 8000904:	1961      	adds	r1, r4, r5
 8000906:	42a3      	cmp	r3, r4
 8000908:	6025      	str	r5, [r4, #0]
 800090a:	bf18      	it	ne
 800090c:	6059      	strne	r1, [r3, #4]
 800090e:	6863      	ldr	r3, [r4, #4]
 8000910:	bf08      	it	eq
 8000912:	6031      	streq	r1, [r6, #0]
 8000914:	5162      	str	r2, [r4, r5]
 8000916:	604b      	str	r3, [r1, #4]
 8000918:	4638      	mov	r0, r7
 800091a:	f104 060b 	add.w	r6, r4, #11
 800091e:	f000 fd83 	bl	8001428 <__malloc_unlock>
 8000922:	f026 0607 	bic.w	r6, r6, #7
 8000926:	1d23      	adds	r3, r4, #4
 8000928:	1af2      	subs	r2, r6, r3
 800092a:	d0b6      	beq.n	800089a <_malloc_r+0x22>
 800092c:	1b9b      	subs	r3, r3, r6
 800092e:	50a3      	str	r3, [r4, r2]
 8000930:	e7b3      	b.n	800089a <_malloc_r+0x22>
 8000932:	6862      	ldr	r2, [r4, #4]
 8000934:	42a3      	cmp	r3, r4
 8000936:	bf0c      	ite	eq
 8000938:	6032      	streq	r2, [r6, #0]
 800093a:	605a      	strne	r2, [r3, #4]
 800093c:	e7ec      	b.n	8000918 <_malloc_r+0xa0>
 800093e:	4623      	mov	r3, r4
 8000940:	6864      	ldr	r4, [r4, #4]
 8000942:	e7b2      	b.n	80008aa <_malloc_r+0x32>
 8000944:	4634      	mov	r4, r6
 8000946:	6876      	ldr	r6, [r6, #4]
 8000948:	e7b9      	b.n	80008be <_malloc_r+0x46>
 800094a:	230c      	movs	r3, #12
 800094c:	603b      	str	r3, [r7, #0]
 800094e:	4638      	mov	r0, r7
 8000950:	f000 fd6a 	bl	8001428 <__malloc_unlock>
 8000954:	e7a1      	b.n	800089a <_malloc_r+0x22>
 8000956:	6025      	str	r5, [r4, #0]
 8000958:	e7de      	b.n	8000918 <_malloc_r+0xa0>
 800095a:	bf00      	nop
 800095c:	20000088 	.word	0x20000088

08000960 <__sfputc_r>:
 8000960:	6893      	ldr	r3, [r2, #8]
 8000962:	3b01      	subs	r3, #1
 8000964:	2b00      	cmp	r3, #0
 8000966:	b410      	push	{r4}
 8000968:	6093      	str	r3, [r2, #8]
 800096a:	da08      	bge.n	800097e <__sfputc_r+0x1e>
 800096c:	6994      	ldr	r4, [r2, #24]
 800096e:	42a3      	cmp	r3, r4
 8000970:	db01      	blt.n	8000976 <__sfputc_r+0x16>
 8000972:	290a      	cmp	r1, #10
 8000974:	d103      	bne.n	800097e <__sfputc_r+0x1e>
 8000976:	f85d 4b04 	ldr.w	r4, [sp], #4
 800097a:	f000 bb33 	b.w	8000fe4 <__swbuf_r>
 800097e:	6813      	ldr	r3, [r2, #0]
 8000980:	1c58      	adds	r0, r3, #1
 8000982:	6010      	str	r0, [r2, #0]
 8000984:	7019      	strb	r1, [r3, #0]
 8000986:	4608      	mov	r0, r1
 8000988:	f85d 4b04 	ldr.w	r4, [sp], #4
 800098c:	4770      	bx	lr

0800098e <__sfputs_r>:
 800098e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000990:	4606      	mov	r6, r0
 8000992:	460f      	mov	r7, r1
 8000994:	4614      	mov	r4, r2
 8000996:	18d5      	adds	r5, r2, r3
 8000998:	42ac      	cmp	r4, r5
 800099a:	d101      	bne.n	80009a0 <__sfputs_r+0x12>
 800099c:	2000      	movs	r0, #0
 800099e:	e007      	b.n	80009b0 <__sfputs_r+0x22>
 80009a0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009a4:	463a      	mov	r2, r7
 80009a6:	4630      	mov	r0, r6
 80009a8:	f7ff ffda 	bl	8000960 <__sfputc_r>
 80009ac:	1c43      	adds	r3, r0, #1
 80009ae:	d1f3      	bne.n	8000998 <__sfputs_r+0xa>
 80009b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009b4 <_vfiprintf_r>:
 80009b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009b8:	460d      	mov	r5, r1
 80009ba:	b09d      	sub	sp, #116	; 0x74
 80009bc:	4614      	mov	r4, r2
 80009be:	4698      	mov	r8, r3
 80009c0:	4606      	mov	r6, r0
 80009c2:	b118      	cbz	r0, 80009cc <_vfiprintf_r+0x18>
 80009c4:	6983      	ldr	r3, [r0, #24]
 80009c6:	b90b      	cbnz	r3, 80009cc <_vfiprintf_r+0x18>
 80009c8:	f7ff fe96 	bl	80006f8 <__sinit>
 80009cc:	4b89      	ldr	r3, [pc, #548]	; (8000bf4 <_vfiprintf_r+0x240>)
 80009ce:	429d      	cmp	r5, r3
 80009d0:	d11b      	bne.n	8000a0a <_vfiprintf_r+0x56>
 80009d2:	6875      	ldr	r5, [r6, #4]
 80009d4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009d6:	07d9      	lsls	r1, r3, #31
 80009d8:	d405      	bmi.n	80009e6 <_vfiprintf_r+0x32>
 80009da:	89ab      	ldrh	r3, [r5, #12]
 80009dc:	059a      	lsls	r2, r3, #22
 80009de:	d402      	bmi.n	80009e6 <_vfiprintf_r+0x32>
 80009e0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009e2:	f7ff ff27 	bl	8000834 <__retarget_lock_acquire_recursive>
 80009e6:	89ab      	ldrh	r3, [r5, #12]
 80009e8:	071b      	lsls	r3, r3, #28
 80009ea:	d501      	bpl.n	80009f0 <_vfiprintf_r+0x3c>
 80009ec:	692b      	ldr	r3, [r5, #16]
 80009ee:	b9eb      	cbnz	r3, 8000a2c <_vfiprintf_r+0x78>
 80009f0:	4629      	mov	r1, r5
 80009f2:	4630      	mov	r0, r6
 80009f4:	f000 fb5a 	bl	80010ac <__swsetup_r>
 80009f8:	b1c0      	cbz	r0, 8000a2c <_vfiprintf_r+0x78>
 80009fa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009fc:	07dc      	lsls	r4, r3, #31
 80009fe:	d50e      	bpl.n	8000a1e <_vfiprintf_r+0x6a>
 8000a00:	f04f 30ff 	mov.w	r0, #4294967295
 8000a04:	b01d      	add	sp, #116	; 0x74
 8000a06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a0a:	4b7b      	ldr	r3, [pc, #492]	; (8000bf8 <_vfiprintf_r+0x244>)
 8000a0c:	429d      	cmp	r5, r3
 8000a0e:	d101      	bne.n	8000a14 <_vfiprintf_r+0x60>
 8000a10:	68b5      	ldr	r5, [r6, #8]
 8000a12:	e7df      	b.n	80009d4 <_vfiprintf_r+0x20>
 8000a14:	4b79      	ldr	r3, [pc, #484]	; (8000bfc <_vfiprintf_r+0x248>)
 8000a16:	429d      	cmp	r5, r3
 8000a18:	bf08      	it	eq
 8000a1a:	68f5      	ldreq	r5, [r6, #12]
 8000a1c:	e7da      	b.n	80009d4 <_vfiprintf_r+0x20>
 8000a1e:	89ab      	ldrh	r3, [r5, #12]
 8000a20:	0598      	lsls	r0, r3, #22
 8000a22:	d4ed      	bmi.n	8000a00 <_vfiprintf_r+0x4c>
 8000a24:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a26:	f7ff ff06 	bl	8000836 <__retarget_lock_release_recursive>
 8000a2a:	e7e9      	b.n	8000a00 <_vfiprintf_r+0x4c>
 8000a2c:	2300      	movs	r3, #0
 8000a2e:	9309      	str	r3, [sp, #36]	; 0x24
 8000a30:	2320      	movs	r3, #32
 8000a32:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a36:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a3a:	2330      	movs	r3, #48	; 0x30
 8000a3c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000c00 <_vfiprintf_r+0x24c>
 8000a40:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a44:	f04f 0901 	mov.w	r9, #1
 8000a48:	4623      	mov	r3, r4
 8000a4a:	469a      	mov	sl, r3
 8000a4c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a50:	b10a      	cbz	r2, 8000a56 <_vfiprintf_r+0xa2>
 8000a52:	2a25      	cmp	r2, #37	; 0x25
 8000a54:	d1f9      	bne.n	8000a4a <_vfiprintf_r+0x96>
 8000a56:	ebba 0b04 	subs.w	fp, sl, r4
 8000a5a:	d00b      	beq.n	8000a74 <_vfiprintf_r+0xc0>
 8000a5c:	465b      	mov	r3, fp
 8000a5e:	4622      	mov	r2, r4
 8000a60:	4629      	mov	r1, r5
 8000a62:	4630      	mov	r0, r6
 8000a64:	f7ff ff93 	bl	800098e <__sfputs_r>
 8000a68:	3001      	adds	r0, #1
 8000a6a:	f000 80aa 	beq.w	8000bc2 <_vfiprintf_r+0x20e>
 8000a6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a70:	445a      	add	r2, fp
 8000a72:	9209      	str	r2, [sp, #36]	; 0x24
 8000a74:	f89a 3000 	ldrb.w	r3, [sl]
 8000a78:	2b00      	cmp	r3, #0
 8000a7a:	f000 80a2 	beq.w	8000bc2 <_vfiprintf_r+0x20e>
 8000a7e:	2300      	movs	r3, #0
 8000a80:	f04f 32ff 	mov.w	r2, #4294967295
 8000a84:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a88:	f10a 0a01 	add.w	sl, sl, #1
 8000a8c:	9304      	str	r3, [sp, #16]
 8000a8e:	9307      	str	r3, [sp, #28]
 8000a90:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a94:	931a      	str	r3, [sp, #104]	; 0x68
 8000a96:	4654      	mov	r4, sl
 8000a98:	2205      	movs	r2, #5
 8000a9a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a9e:	4858      	ldr	r0, [pc, #352]	; (8000c00 <_vfiprintf_r+0x24c>)
 8000aa0:	f7ff fba6 	bl	80001f0 <memchr>
 8000aa4:	9a04      	ldr	r2, [sp, #16]
 8000aa6:	b9d8      	cbnz	r0, 8000ae0 <_vfiprintf_r+0x12c>
 8000aa8:	06d1      	lsls	r1, r2, #27
 8000aaa:	bf44      	itt	mi
 8000aac:	2320      	movmi	r3, #32
 8000aae:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ab2:	0713      	lsls	r3, r2, #28
 8000ab4:	bf44      	itt	mi
 8000ab6:	232b      	movmi	r3, #43	; 0x2b
 8000ab8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000abc:	f89a 3000 	ldrb.w	r3, [sl]
 8000ac0:	2b2a      	cmp	r3, #42	; 0x2a
 8000ac2:	d015      	beq.n	8000af0 <_vfiprintf_r+0x13c>
 8000ac4:	9a07      	ldr	r2, [sp, #28]
 8000ac6:	4654      	mov	r4, sl
 8000ac8:	2000      	movs	r0, #0
 8000aca:	f04f 0c0a 	mov.w	ip, #10
 8000ace:	4621      	mov	r1, r4
 8000ad0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ad4:	3b30      	subs	r3, #48	; 0x30
 8000ad6:	2b09      	cmp	r3, #9
 8000ad8:	d94e      	bls.n	8000b78 <_vfiprintf_r+0x1c4>
 8000ada:	b1b0      	cbz	r0, 8000b0a <_vfiprintf_r+0x156>
 8000adc:	9207      	str	r2, [sp, #28]
 8000ade:	e014      	b.n	8000b0a <_vfiprintf_r+0x156>
 8000ae0:	eba0 0308 	sub.w	r3, r0, r8
 8000ae4:	fa09 f303 	lsl.w	r3, r9, r3
 8000ae8:	4313      	orrs	r3, r2
 8000aea:	9304      	str	r3, [sp, #16]
 8000aec:	46a2      	mov	sl, r4
 8000aee:	e7d2      	b.n	8000a96 <_vfiprintf_r+0xe2>
 8000af0:	9b03      	ldr	r3, [sp, #12]
 8000af2:	1d19      	adds	r1, r3, #4
 8000af4:	681b      	ldr	r3, [r3, #0]
 8000af6:	9103      	str	r1, [sp, #12]
 8000af8:	2b00      	cmp	r3, #0
 8000afa:	bfbb      	ittet	lt
 8000afc:	425b      	neglt	r3, r3
 8000afe:	f042 0202 	orrlt.w	r2, r2, #2
 8000b02:	9307      	strge	r3, [sp, #28]
 8000b04:	9307      	strlt	r3, [sp, #28]
 8000b06:	bfb8      	it	lt
 8000b08:	9204      	strlt	r2, [sp, #16]
 8000b0a:	7823      	ldrb	r3, [r4, #0]
 8000b0c:	2b2e      	cmp	r3, #46	; 0x2e
 8000b0e:	d10c      	bne.n	8000b2a <_vfiprintf_r+0x176>
 8000b10:	7863      	ldrb	r3, [r4, #1]
 8000b12:	2b2a      	cmp	r3, #42	; 0x2a
 8000b14:	d135      	bne.n	8000b82 <_vfiprintf_r+0x1ce>
 8000b16:	9b03      	ldr	r3, [sp, #12]
 8000b18:	1d1a      	adds	r2, r3, #4
 8000b1a:	681b      	ldr	r3, [r3, #0]
 8000b1c:	9203      	str	r2, [sp, #12]
 8000b1e:	2b00      	cmp	r3, #0
 8000b20:	bfb8      	it	lt
 8000b22:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b26:	3402      	adds	r4, #2
 8000b28:	9305      	str	r3, [sp, #20]
 8000b2a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000c10 <_vfiprintf_r+0x25c>
 8000b2e:	7821      	ldrb	r1, [r4, #0]
 8000b30:	2203      	movs	r2, #3
 8000b32:	4650      	mov	r0, sl
 8000b34:	f7ff fb5c 	bl	80001f0 <memchr>
 8000b38:	b140      	cbz	r0, 8000b4c <_vfiprintf_r+0x198>
 8000b3a:	2340      	movs	r3, #64	; 0x40
 8000b3c:	eba0 000a 	sub.w	r0, r0, sl
 8000b40:	fa03 f000 	lsl.w	r0, r3, r0
 8000b44:	9b04      	ldr	r3, [sp, #16]
 8000b46:	4303      	orrs	r3, r0
 8000b48:	3401      	adds	r4, #1
 8000b4a:	9304      	str	r3, [sp, #16]
 8000b4c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b50:	482c      	ldr	r0, [pc, #176]	; (8000c04 <_vfiprintf_r+0x250>)
 8000b52:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b56:	2206      	movs	r2, #6
 8000b58:	f7ff fb4a 	bl	80001f0 <memchr>
 8000b5c:	2800      	cmp	r0, #0
 8000b5e:	d03f      	beq.n	8000be0 <_vfiprintf_r+0x22c>
 8000b60:	4b29      	ldr	r3, [pc, #164]	; (8000c08 <_vfiprintf_r+0x254>)
 8000b62:	bb1b      	cbnz	r3, 8000bac <_vfiprintf_r+0x1f8>
 8000b64:	9b03      	ldr	r3, [sp, #12]
 8000b66:	3307      	adds	r3, #7
 8000b68:	f023 0307 	bic.w	r3, r3, #7
 8000b6c:	3308      	adds	r3, #8
 8000b6e:	9303      	str	r3, [sp, #12]
 8000b70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b72:	443b      	add	r3, r7
 8000b74:	9309      	str	r3, [sp, #36]	; 0x24
 8000b76:	e767      	b.n	8000a48 <_vfiprintf_r+0x94>
 8000b78:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b7c:	460c      	mov	r4, r1
 8000b7e:	2001      	movs	r0, #1
 8000b80:	e7a5      	b.n	8000ace <_vfiprintf_r+0x11a>
 8000b82:	2300      	movs	r3, #0
 8000b84:	3401      	adds	r4, #1
 8000b86:	9305      	str	r3, [sp, #20]
 8000b88:	4619      	mov	r1, r3
 8000b8a:	f04f 0c0a 	mov.w	ip, #10
 8000b8e:	4620      	mov	r0, r4
 8000b90:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b94:	3a30      	subs	r2, #48	; 0x30
 8000b96:	2a09      	cmp	r2, #9
 8000b98:	d903      	bls.n	8000ba2 <_vfiprintf_r+0x1ee>
 8000b9a:	2b00      	cmp	r3, #0
 8000b9c:	d0c5      	beq.n	8000b2a <_vfiprintf_r+0x176>
 8000b9e:	9105      	str	r1, [sp, #20]
 8000ba0:	e7c3      	b.n	8000b2a <_vfiprintf_r+0x176>
 8000ba2:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ba6:	4604      	mov	r4, r0
 8000ba8:	2301      	movs	r3, #1
 8000baa:	e7f0      	b.n	8000b8e <_vfiprintf_r+0x1da>
 8000bac:	ab03      	add	r3, sp, #12
 8000bae:	9300      	str	r3, [sp, #0]
 8000bb0:	462a      	mov	r2, r5
 8000bb2:	4b16      	ldr	r3, [pc, #88]	; (8000c0c <_vfiprintf_r+0x258>)
 8000bb4:	a904      	add	r1, sp, #16
 8000bb6:	4630      	mov	r0, r6
 8000bb8:	f3af 8000 	nop.w
 8000bbc:	4607      	mov	r7, r0
 8000bbe:	1c78      	adds	r0, r7, #1
 8000bc0:	d1d6      	bne.n	8000b70 <_vfiprintf_r+0x1bc>
 8000bc2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000bc4:	07d9      	lsls	r1, r3, #31
 8000bc6:	d405      	bmi.n	8000bd4 <_vfiprintf_r+0x220>
 8000bc8:	89ab      	ldrh	r3, [r5, #12]
 8000bca:	059a      	lsls	r2, r3, #22
 8000bcc:	d402      	bmi.n	8000bd4 <_vfiprintf_r+0x220>
 8000bce:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000bd0:	f7ff fe31 	bl	8000836 <__retarget_lock_release_recursive>
 8000bd4:	89ab      	ldrh	r3, [r5, #12]
 8000bd6:	065b      	lsls	r3, r3, #25
 8000bd8:	f53f af12 	bmi.w	8000a00 <_vfiprintf_r+0x4c>
 8000bdc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000bde:	e711      	b.n	8000a04 <_vfiprintf_r+0x50>
 8000be0:	ab03      	add	r3, sp, #12
 8000be2:	9300      	str	r3, [sp, #0]
 8000be4:	462a      	mov	r2, r5
 8000be6:	4b09      	ldr	r3, [pc, #36]	; (8000c0c <_vfiprintf_r+0x258>)
 8000be8:	a904      	add	r1, sp, #16
 8000bea:	4630      	mov	r0, r6
 8000bec:	f000 f880 	bl	8000cf0 <_printf_i>
 8000bf0:	e7e4      	b.n	8000bbc <_vfiprintf_r+0x208>
 8000bf2:	bf00      	nop
 8000bf4:	08001578 	.word	0x08001578
 8000bf8:	08001598 	.word	0x08001598
 8000bfc:	08001558 	.word	0x08001558
 8000c00:	080015b8 	.word	0x080015b8
 8000c04:	080015c2 	.word	0x080015c2
 8000c08:	00000000 	.word	0x00000000
 8000c0c:	0800098f 	.word	0x0800098f
 8000c10:	080015be 	.word	0x080015be

08000c14 <_printf_common>:
 8000c14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c18:	4616      	mov	r6, r2
 8000c1a:	4699      	mov	r9, r3
 8000c1c:	688a      	ldr	r2, [r1, #8]
 8000c1e:	690b      	ldr	r3, [r1, #16]
 8000c20:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c24:	4293      	cmp	r3, r2
 8000c26:	bfb8      	it	lt
 8000c28:	4613      	movlt	r3, r2
 8000c2a:	6033      	str	r3, [r6, #0]
 8000c2c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c30:	4607      	mov	r7, r0
 8000c32:	460c      	mov	r4, r1
 8000c34:	b10a      	cbz	r2, 8000c3a <_printf_common+0x26>
 8000c36:	3301      	adds	r3, #1
 8000c38:	6033      	str	r3, [r6, #0]
 8000c3a:	6823      	ldr	r3, [r4, #0]
 8000c3c:	0699      	lsls	r1, r3, #26
 8000c3e:	bf42      	ittt	mi
 8000c40:	6833      	ldrmi	r3, [r6, #0]
 8000c42:	3302      	addmi	r3, #2
 8000c44:	6033      	strmi	r3, [r6, #0]
 8000c46:	6825      	ldr	r5, [r4, #0]
 8000c48:	f015 0506 	ands.w	r5, r5, #6
 8000c4c:	d106      	bne.n	8000c5c <_printf_common+0x48>
 8000c4e:	f104 0a19 	add.w	sl, r4, #25
 8000c52:	68e3      	ldr	r3, [r4, #12]
 8000c54:	6832      	ldr	r2, [r6, #0]
 8000c56:	1a9b      	subs	r3, r3, r2
 8000c58:	42ab      	cmp	r3, r5
 8000c5a:	dc26      	bgt.n	8000caa <_printf_common+0x96>
 8000c5c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c60:	1e13      	subs	r3, r2, #0
 8000c62:	6822      	ldr	r2, [r4, #0]
 8000c64:	bf18      	it	ne
 8000c66:	2301      	movne	r3, #1
 8000c68:	0692      	lsls	r2, r2, #26
 8000c6a:	d42b      	bmi.n	8000cc4 <_printf_common+0xb0>
 8000c6c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c70:	4649      	mov	r1, r9
 8000c72:	4638      	mov	r0, r7
 8000c74:	47c0      	blx	r8
 8000c76:	3001      	adds	r0, #1
 8000c78:	d01e      	beq.n	8000cb8 <_printf_common+0xa4>
 8000c7a:	6823      	ldr	r3, [r4, #0]
 8000c7c:	68e5      	ldr	r5, [r4, #12]
 8000c7e:	6832      	ldr	r2, [r6, #0]
 8000c80:	f003 0306 	and.w	r3, r3, #6
 8000c84:	2b04      	cmp	r3, #4
 8000c86:	bf08      	it	eq
 8000c88:	1aad      	subeq	r5, r5, r2
 8000c8a:	68a3      	ldr	r3, [r4, #8]
 8000c8c:	6922      	ldr	r2, [r4, #16]
 8000c8e:	bf0c      	ite	eq
 8000c90:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c94:	2500      	movne	r5, #0
 8000c96:	4293      	cmp	r3, r2
 8000c98:	bfc4      	itt	gt
 8000c9a:	1a9b      	subgt	r3, r3, r2
 8000c9c:	18ed      	addgt	r5, r5, r3
 8000c9e:	2600      	movs	r6, #0
 8000ca0:	341a      	adds	r4, #26
 8000ca2:	42b5      	cmp	r5, r6
 8000ca4:	d11a      	bne.n	8000cdc <_printf_common+0xc8>
 8000ca6:	2000      	movs	r0, #0
 8000ca8:	e008      	b.n	8000cbc <_printf_common+0xa8>
 8000caa:	2301      	movs	r3, #1
 8000cac:	4652      	mov	r2, sl
 8000cae:	4649      	mov	r1, r9
 8000cb0:	4638      	mov	r0, r7
 8000cb2:	47c0      	blx	r8
 8000cb4:	3001      	adds	r0, #1
 8000cb6:	d103      	bne.n	8000cc0 <_printf_common+0xac>
 8000cb8:	f04f 30ff 	mov.w	r0, #4294967295
 8000cbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cc0:	3501      	adds	r5, #1
 8000cc2:	e7c6      	b.n	8000c52 <_printf_common+0x3e>
 8000cc4:	18e1      	adds	r1, r4, r3
 8000cc6:	1c5a      	adds	r2, r3, #1
 8000cc8:	2030      	movs	r0, #48	; 0x30
 8000cca:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000cce:	4422      	add	r2, r4
 8000cd0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000cd4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000cd8:	3302      	adds	r3, #2
 8000cda:	e7c7      	b.n	8000c6c <_printf_common+0x58>
 8000cdc:	2301      	movs	r3, #1
 8000cde:	4622      	mov	r2, r4
 8000ce0:	4649      	mov	r1, r9
 8000ce2:	4638      	mov	r0, r7
 8000ce4:	47c0      	blx	r8
 8000ce6:	3001      	adds	r0, #1
 8000ce8:	d0e6      	beq.n	8000cb8 <_printf_common+0xa4>
 8000cea:	3601      	adds	r6, #1
 8000cec:	e7d9      	b.n	8000ca2 <_printf_common+0x8e>
	...

08000cf0 <_printf_i>:
 8000cf0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000cf4:	7e0f      	ldrb	r7, [r1, #24]
 8000cf6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000cf8:	2f78      	cmp	r7, #120	; 0x78
 8000cfa:	4691      	mov	r9, r2
 8000cfc:	4680      	mov	r8, r0
 8000cfe:	460c      	mov	r4, r1
 8000d00:	469a      	mov	sl, r3
 8000d02:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d06:	d807      	bhi.n	8000d18 <_printf_i+0x28>
 8000d08:	2f62      	cmp	r7, #98	; 0x62
 8000d0a:	d80a      	bhi.n	8000d22 <_printf_i+0x32>
 8000d0c:	2f00      	cmp	r7, #0
 8000d0e:	f000 80d8 	beq.w	8000ec2 <_printf_i+0x1d2>
 8000d12:	2f58      	cmp	r7, #88	; 0x58
 8000d14:	f000 80a3 	beq.w	8000e5e <_printf_i+0x16e>
 8000d18:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d1c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d20:	e03a      	b.n	8000d98 <_printf_i+0xa8>
 8000d22:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d26:	2b15      	cmp	r3, #21
 8000d28:	d8f6      	bhi.n	8000d18 <_printf_i+0x28>
 8000d2a:	a101      	add	r1, pc, #4	; (adr r1, 8000d30 <_printf_i+0x40>)
 8000d2c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d30:	08000d89 	.word	0x08000d89
 8000d34:	08000d9d 	.word	0x08000d9d
 8000d38:	08000d19 	.word	0x08000d19
 8000d3c:	08000d19 	.word	0x08000d19
 8000d40:	08000d19 	.word	0x08000d19
 8000d44:	08000d19 	.word	0x08000d19
 8000d48:	08000d9d 	.word	0x08000d9d
 8000d4c:	08000d19 	.word	0x08000d19
 8000d50:	08000d19 	.word	0x08000d19
 8000d54:	08000d19 	.word	0x08000d19
 8000d58:	08000d19 	.word	0x08000d19
 8000d5c:	08000ea9 	.word	0x08000ea9
 8000d60:	08000dcd 	.word	0x08000dcd
 8000d64:	08000e8b 	.word	0x08000e8b
 8000d68:	08000d19 	.word	0x08000d19
 8000d6c:	08000d19 	.word	0x08000d19
 8000d70:	08000ecb 	.word	0x08000ecb
 8000d74:	08000d19 	.word	0x08000d19
 8000d78:	08000dcd 	.word	0x08000dcd
 8000d7c:	08000d19 	.word	0x08000d19
 8000d80:	08000d19 	.word	0x08000d19
 8000d84:	08000e93 	.word	0x08000e93
 8000d88:	682b      	ldr	r3, [r5, #0]
 8000d8a:	1d1a      	adds	r2, r3, #4
 8000d8c:	681b      	ldr	r3, [r3, #0]
 8000d8e:	602a      	str	r2, [r5, #0]
 8000d90:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d94:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d98:	2301      	movs	r3, #1
 8000d9a:	e0a3      	b.n	8000ee4 <_printf_i+0x1f4>
 8000d9c:	6820      	ldr	r0, [r4, #0]
 8000d9e:	6829      	ldr	r1, [r5, #0]
 8000da0:	0606      	lsls	r6, r0, #24
 8000da2:	f101 0304 	add.w	r3, r1, #4
 8000da6:	d50a      	bpl.n	8000dbe <_printf_i+0xce>
 8000da8:	680e      	ldr	r6, [r1, #0]
 8000daa:	602b      	str	r3, [r5, #0]
 8000dac:	2e00      	cmp	r6, #0
 8000dae:	da03      	bge.n	8000db8 <_printf_i+0xc8>
 8000db0:	232d      	movs	r3, #45	; 0x2d
 8000db2:	4276      	negs	r6, r6
 8000db4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000db8:	485e      	ldr	r0, [pc, #376]	; (8000f34 <_printf_i+0x244>)
 8000dba:	230a      	movs	r3, #10
 8000dbc:	e019      	b.n	8000df2 <_printf_i+0x102>
 8000dbe:	680e      	ldr	r6, [r1, #0]
 8000dc0:	602b      	str	r3, [r5, #0]
 8000dc2:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000dc6:	bf18      	it	ne
 8000dc8:	b236      	sxthne	r6, r6
 8000dca:	e7ef      	b.n	8000dac <_printf_i+0xbc>
 8000dcc:	682b      	ldr	r3, [r5, #0]
 8000dce:	6820      	ldr	r0, [r4, #0]
 8000dd0:	1d19      	adds	r1, r3, #4
 8000dd2:	6029      	str	r1, [r5, #0]
 8000dd4:	0601      	lsls	r1, r0, #24
 8000dd6:	d501      	bpl.n	8000ddc <_printf_i+0xec>
 8000dd8:	681e      	ldr	r6, [r3, #0]
 8000dda:	e002      	b.n	8000de2 <_printf_i+0xf2>
 8000ddc:	0646      	lsls	r6, r0, #25
 8000dde:	d5fb      	bpl.n	8000dd8 <_printf_i+0xe8>
 8000de0:	881e      	ldrh	r6, [r3, #0]
 8000de2:	4854      	ldr	r0, [pc, #336]	; (8000f34 <_printf_i+0x244>)
 8000de4:	2f6f      	cmp	r7, #111	; 0x6f
 8000de6:	bf0c      	ite	eq
 8000de8:	2308      	moveq	r3, #8
 8000dea:	230a      	movne	r3, #10
 8000dec:	2100      	movs	r1, #0
 8000dee:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000df2:	6865      	ldr	r5, [r4, #4]
 8000df4:	60a5      	str	r5, [r4, #8]
 8000df6:	2d00      	cmp	r5, #0
 8000df8:	bfa2      	ittt	ge
 8000dfa:	6821      	ldrge	r1, [r4, #0]
 8000dfc:	f021 0104 	bicge.w	r1, r1, #4
 8000e00:	6021      	strge	r1, [r4, #0]
 8000e02:	b90e      	cbnz	r6, 8000e08 <_printf_i+0x118>
 8000e04:	2d00      	cmp	r5, #0
 8000e06:	d04d      	beq.n	8000ea4 <_printf_i+0x1b4>
 8000e08:	4615      	mov	r5, r2
 8000e0a:	fbb6 f1f3 	udiv	r1, r6, r3
 8000e0e:	fb03 6711 	mls	r7, r3, r1, r6
 8000e12:	5dc7      	ldrb	r7, [r0, r7]
 8000e14:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000e18:	4637      	mov	r7, r6
 8000e1a:	42bb      	cmp	r3, r7
 8000e1c:	460e      	mov	r6, r1
 8000e1e:	d9f4      	bls.n	8000e0a <_printf_i+0x11a>
 8000e20:	2b08      	cmp	r3, #8
 8000e22:	d10b      	bne.n	8000e3c <_printf_i+0x14c>
 8000e24:	6823      	ldr	r3, [r4, #0]
 8000e26:	07de      	lsls	r6, r3, #31
 8000e28:	d508      	bpl.n	8000e3c <_printf_i+0x14c>
 8000e2a:	6923      	ldr	r3, [r4, #16]
 8000e2c:	6861      	ldr	r1, [r4, #4]
 8000e2e:	4299      	cmp	r1, r3
 8000e30:	bfde      	ittt	le
 8000e32:	2330      	movle	r3, #48	; 0x30
 8000e34:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e38:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e3c:	1b52      	subs	r2, r2, r5
 8000e3e:	6122      	str	r2, [r4, #16]
 8000e40:	f8cd a000 	str.w	sl, [sp]
 8000e44:	464b      	mov	r3, r9
 8000e46:	aa03      	add	r2, sp, #12
 8000e48:	4621      	mov	r1, r4
 8000e4a:	4640      	mov	r0, r8
 8000e4c:	f7ff fee2 	bl	8000c14 <_printf_common>
 8000e50:	3001      	adds	r0, #1
 8000e52:	d14c      	bne.n	8000eee <_printf_i+0x1fe>
 8000e54:	f04f 30ff 	mov.w	r0, #4294967295
 8000e58:	b004      	add	sp, #16
 8000e5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e5e:	4835      	ldr	r0, [pc, #212]	; (8000f34 <_printf_i+0x244>)
 8000e60:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000e64:	6829      	ldr	r1, [r5, #0]
 8000e66:	6823      	ldr	r3, [r4, #0]
 8000e68:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e6c:	6029      	str	r1, [r5, #0]
 8000e6e:	061d      	lsls	r5, r3, #24
 8000e70:	d514      	bpl.n	8000e9c <_printf_i+0x1ac>
 8000e72:	07df      	lsls	r7, r3, #31
 8000e74:	bf44      	itt	mi
 8000e76:	f043 0320 	orrmi.w	r3, r3, #32
 8000e7a:	6023      	strmi	r3, [r4, #0]
 8000e7c:	b91e      	cbnz	r6, 8000e86 <_printf_i+0x196>
 8000e7e:	6823      	ldr	r3, [r4, #0]
 8000e80:	f023 0320 	bic.w	r3, r3, #32
 8000e84:	6023      	str	r3, [r4, #0]
 8000e86:	2310      	movs	r3, #16
 8000e88:	e7b0      	b.n	8000dec <_printf_i+0xfc>
 8000e8a:	6823      	ldr	r3, [r4, #0]
 8000e8c:	f043 0320 	orr.w	r3, r3, #32
 8000e90:	6023      	str	r3, [r4, #0]
 8000e92:	2378      	movs	r3, #120	; 0x78
 8000e94:	4828      	ldr	r0, [pc, #160]	; (8000f38 <_printf_i+0x248>)
 8000e96:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000e9a:	e7e3      	b.n	8000e64 <_printf_i+0x174>
 8000e9c:	0659      	lsls	r1, r3, #25
 8000e9e:	bf48      	it	mi
 8000ea0:	b2b6      	uxthmi	r6, r6
 8000ea2:	e7e6      	b.n	8000e72 <_printf_i+0x182>
 8000ea4:	4615      	mov	r5, r2
 8000ea6:	e7bb      	b.n	8000e20 <_printf_i+0x130>
 8000ea8:	682b      	ldr	r3, [r5, #0]
 8000eaa:	6826      	ldr	r6, [r4, #0]
 8000eac:	6961      	ldr	r1, [r4, #20]
 8000eae:	1d18      	adds	r0, r3, #4
 8000eb0:	6028      	str	r0, [r5, #0]
 8000eb2:	0635      	lsls	r5, r6, #24
 8000eb4:	681b      	ldr	r3, [r3, #0]
 8000eb6:	d501      	bpl.n	8000ebc <_printf_i+0x1cc>
 8000eb8:	6019      	str	r1, [r3, #0]
 8000eba:	e002      	b.n	8000ec2 <_printf_i+0x1d2>
 8000ebc:	0670      	lsls	r0, r6, #25
 8000ebe:	d5fb      	bpl.n	8000eb8 <_printf_i+0x1c8>
 8000ec0:	8019      	strh	r1, [r3, #0]
 8000ec2:	2300      	movs	r3, #0
 8000ec4:	6123      	str	r3, [r4, #16]
 8000ec6:	4615      	mov	r5, r2
 8000ec8:	e7ba      	b.n	8000e40 <_printf_i+0x150>
 8000eca:	682b      	ldr	r3, [r5, #0]
 8000ecc:	1d1a      	adds	r2, r3, #4
 8000ece:	602a      	str	r2, [r5, #0]
 8000ed0:	681d      	ldr	r5, [r3, #0]
 8000ed2:	6862      	ldr	r2, [r4, #4]
 8000ed4:	2100      	movs	r1, #0
 8000ed6:	4628      	mov	r0, r5
 8000ed8:	f7ff f98a 	bl	80001f0 <memchr>
 8000edc:	b108      	cbz	r0, 8000ee2 <_printf_i+0x1f2>
 8000ede:	1b40      	subs	r0, r0, r5
 8000ee0:	6060      	str	r0, [r4, #4]
 8000ee2:	6863      	ldr	r3, [r4, #4]
 8000ee4:	6123      	str	r3, [r4, #16]
 8000ee6:	2300      	movs	r3, #0
 8000ee8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000eec:	e7a8      	b.n	8000e40 <_printf_i+0x150>
 8000eee:	6923      	ldr	r3, [r4, #16]
 8000ef0:	462a      	mov	r2, r5
 8000ef2:	4649      	mov	r1, r9
 8000ef4:	4640      	mov	r0, r8
 8000ef6:	47d0      	blx	sl
 8000ef8:	3001      	adds	r0, #1
 8000efa:	d0ab      	beq.n	8000e54 <_printf_i+0x164>
 8000efc:	6823      	ldr	r3, [r4, #0]
 8000efe:	079b      	lsls	r3, r3, #30
 8000f00:	d413      	bmi.n	8000f2a <_printf_i+0x23a>
 8000f02:	68e0      	ldr	r0, [r4, #12]
 8000f04:	9b03      	ldr	r3, [sp, #12]
 8000f06:	4298      	cmp	r0, r3
 8000f08:	bfb8      	it	lt
 8000f0a:	4618      	movlt	r0, r3
 8000f0c:	e7a4      	b.n	8000e58 <_printf_i+0x168>
 8000f0e:	2301      	movs	r3, #1
 8000f10:	4632      	mov	r2, r6
 8000f12:	4649      	mov	r1, r9
 8000f14:	4640      	mov	r0, r8
 8000f16:	47d0      	blx	sl
 8000f18:	3001      	adds	r0, #1
 8000f1a:	d09b      	beq.n	8000e54 <_printf_i+0x164>
 8000f1c:	3501      	adds	r5, #1
 8000f1e:	68e3      	ldr	r3, [r4, #12]
 8000f20:	9903      	ldr	r1, [sp, #12]
 8000f22:	1a5b      	subs	r3, r3, r1
 8000f24:	42ab      	cmp	r3, r5
 8000f26:	dcf2      	bgt.n	8000f0e <_printf_i+0x21e>
 8000f28:	e7eb      	b.n	8000f02 <_printf_i+0x212>
 8000f2a:	2500      	movs	r5, #0
 8000f2c:	f104 0619 	add.w	r6, r4, #25
 8000f30:	e7f5      	b.n	8000f1e <_printf_i+0x22e>
 8000f32:	bf00      	nop
 8000f34:	080015c9 	.word	0x080015c9
 8000f38:	080015da 	.word	0x080015da

08000f3c <_sbrk_r>:
 8000f3c:	b538      	push	{r3, r4, r5, lr}
 8000f3e:	4d06      	ldr	r5, [pc, #24]	; (8000f58 <_sbrk_r+0x1c>)
 8000f40:	2300      	movs	r3, #0
 8000f42:	4604      	mov	r4, r0
 8000f44:	4608      	mov	r0, r1
 8000f46:	602b      	str	r3, [r5, #0]
 8000f48:	f7ff fad4 	bl	80004f4 <_sbrk>
 8000f4c:	1c43      	adds	r3, r0, #1
 8000f4e:	d102      	bne.n	8000f56 <_sbrk_r+0x1a>
 8000f50:	682b      	ldr	r3, [r5, #0]
 8000f52:	b103      	cbz	r3, 8000f56 <_sbrk_r+0x1a>
 8000f54:	6023      	str	r3, [r4, #0]
 8000f56:	bd38      	pop	{r3, r4, r5, pc}
 8000f58:	20000090 	.word	0x20000090

08000f5c <__sread>:
 8000f5c:	b510      	push	{r4, lr}
 8000f5e:	460c      	mov	r4, r1
 8000f60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f64:	f000 fab2 	bl	80014cc <_read_r>
 8000f68:	2800      	cmp	r0, #0
 8000f6a:	bfab      	itete	ge
 8000f6c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000f6e:	89a3      	ldrhlt	r3, [r4, #12]
 8000f70:	181b      	addge	r3, r3, r0
 8000f72:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000f76:	bfac      	ite	ge
 8000f78:	6563      	strge	r3, [r4, #84]	; 0x54
 8000f7a:	81a3      	strhlt	r3, [r4, #12]
 8000f7c:	bd10      	pop	{r4, pc}

08000f7e <__swrite>:
 8000f7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f82:	461f      	mov	r7, r3
 8000f84:	898b      	ldrh	r3, [r1, #12]
 8000f86:	05db      	lsls	r3, r3, #23
 8000f88:	4605      	mov	r5, r0
 8000f8a:	460c      	mov	r4, r1
 8000f8c:	4616      	mov	r6, r2
 8000f8e:	d505      	bpl.n	8000f9c <__swrite+0x1e>
 8000f90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f94:	2302      	movs	r3, #2
 8000f96:	2200      	movs	r2, #0
 8000f98:	f000 f9c8 	bl	800132c <_lseek_r>
 8000f9c:	89a3      	ldrh	r3, [r4, #12]
 8000f9e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000fa2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000fa6:	81a3      	strh	r3, [r4, #12]
 8000fa8:	4632      	mov	r2, r6
 8000faa:	463b      	mov	r3, r7
 8000fac:	4628      	mov	r0, r5
 8000fae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000fb2:	f000 b869 	b.w	8001088 <_write_r>

08000fb6 <__sseek>:
 8000fb6:	b510      	push	{r4, lr}
 8000fb8:	460c      	mov	r4, r1
 8000fba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fbe:	f000 f9b5 	bl	800132c <_lseek_r>
 8000fc2:	1c43      	adds	r3, r0, #1
 8000fc4:	89a3      	ldrh	r3, [r4, #12]
 8000fc6:	bf15      	itete	ne
 8000fc8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000fca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000fce:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000fd2:	81a3      	strheq	r3, [r4, #12]
 8000fd4:	bf18      	it	ne
 8000fd6:	81a3      	strhne	r3, [r4, #12]
 8000fd8:	bd10      	pop	{r4, pc}

08000fda <__sclose>:
 8000fda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fde:	f000 b8d3 	b.w	8001188 <_close_r>
	...

08000fe4 <__swbuf_r>:
 8000fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fe6:	460e      	mov	r6, r1
 8000fe8:	4614      	mov	r4, r2
 8000fea:	4605      	mov	r5, r0
 8000fec:	b118      	cbz	r0, 8000ff6 <__swbuf_r+0x12>
 8000fee:	6983      	ldr	r3, [r0, #24]
 8000ff0:	b90b      	cbnz	r3, 8000ff6 <__swbuf_r+0x12>
 8000ff2:	f7ff fb81 	bl	80006f8 <__sinit>
 8000ff6:	4b21      	ldr	r3, [pc, #132]	; (800107c <__swbuf_r+0x98>)
 8000ff8:	429c      	cmp	r4, r3
 8000ffa:	d12b      	bne.n	8001054 <__swbuf_r+0x70>
 8000ffc:	686c      	ldr	r4, [r5, #4]
 8000ffe:	69a3      	ldr	r3, [r4, #24]
 8001000:	60a3      	str	r3, [r4, #8]
 8001002:	89a3      	ldrh	r3, [r4, #12]
 8001004:	071a      	lsls	r2, r3, #28
 8001006:	d52f      	bpl.n	8001068 <__swbuf_r+0x84>
 8001008:	6923      	ldr	r3, [r4, #16]
 800100a:	b36b      	cbz	r3, 8001068 <__swbuf_r+0x84>
 800100c:	6923      	ldr	r3, [r4, #16]
 800100e:	6820      	ldr	r0, [r4, #0]
 8001010:	1ac0      	subs	r0, r0, r3
 8001012:	6963      	ldr	r3, [r4, #20]
 8001014:	b2f6      	uxtb	r6, r6
 8001016:	4283      	cmp	r3, r0
 8001018:	4637      	mov	r7, r6
 800101a:	dc04      	bgt.n	8001026 <__swbuf_r+0x42>
 800101c:	4621      	mov	r1, r4
 800101e:	4628      	mov	r0, r5
 8001020:	f000 f948 	bl	80012b4 <_fflush_r>
 8001024:	bb30      	cbnz	r0, 8001074 <__swbuf_r+0x90>
 8001026:	68a3      	ldr	r3, [r4, #8]
 8001028:	3b01      	subs	r3, #1
 800102a:	60a3      	str	r3, [r4, #8]
 800102c:	6823      	ldr	r3, [r4, #0]
 800102e:	1c5a      	adds	r2, r3, #1
 8001030:	6022      	str	r2, [r4, #0]
 8001032:	701e      	strb	r6, [r3, #0]
 8001034:	6963      	ldr	r3, [r4, #20]
 8001036:	3001      	adds	r0, #1
 8001038:	4283      	cmp	r3, r0
 800103a:	d004      	beq.n	8001046 <__swbuf_r+0x62>
 800103c:	89a3      	ldrh	r3, [r4, #12]
 800103e:	07db      	lsls	r3, r3, #31
 8001040:	d506      	bpl.n	8001050 <__swbuf_r+0x6c>
 8001042:	2e0a      	cmp	r6, #10
 8001044:	d104      	bne.n	8001050 <__swbuf_r+0x6c>
 8001046:	4621      	mov	r1, r4
 8001048:	4628      	mov	r0, r5
 800104a:	f000 f933 	bl	80012b4 <_fflush_r>
 800104e:	b988      	cbnz	r0, 8001074 <__swbuf_r+0x90>
 8001050:	4638      	mov	r0, r7
 8001052:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001054:	4b0a      	ldr	r3, [pc, #40]	; (8001080 <__swbuf_r+0x9c>)
 8001056:	429c      	cmp	r4, r3
 8001058:	d101      	bne.n	800105e <__swbuf_r+0x7a>
 800105a:	68ac      	ldr	r4, [r5, #8]
 800105c:	e7cf      	b.n	8000ffe <__swbuf_r+0x1a>
 800105e:	4b09      	ldr	r3, [pc, #36]	; (8001084 <__swbuf_r+0xa0>)
 8001060:	429c      	cmp	r4, r3
 8001062:	bf08      	it	eq
 8001064:	68ec      	ldreq	r4, [r5, #12]
 8001066:	e7ca      	b.n	8000ffe <__swbuf_r+0x1a>
 8001068:	4621      	mov	r1, r4
 800106a:	4628      	mov	r0, r5
 800106c:	f000 f81e 	bl	80010ac <__swsetup_r>
 8001070:	2800      	cmp	r0, #0
 8001072:	d0cb      	beq.n	800100c <__swbuf_r+0x28>
 8001074:	f04f 37ff 	mov.w	r7, #4294967295
 8001078:	e7ea      	b.n	8001050 <__swbuf_r+0x6c>
 800107a:	bf00      	nop
 800107c:	08001578 	.word	0x08001578
 8001080:	08001598 	.word	0x08001598
 8001084:	08001558 	.word	0x08001558

08001088 <_write_r>:
 8001088:	b538      	push	{r3, r4, r5, lr}
 800108a:	4d07      	ldr	r5, [pc, #28]	; (80010a8 <_write_r+0x20>)
 800108c:	4604      	mov	r4, r0
 800108e:	4608      	mov	r0, r1
 8001090:	4611      	mov	r1, r2
 8001092:	2200      	movs	r2, #0
 8001094:	602a      	str	r2, [r5, #0]
 8001096:	461a      	mov	r2, r3
 8001098:	f7ff f9dc 	bl	8000454 <_write>
 800109c:	1c43      	adds	r3, r0, #1
 800109e:	d102      	bne.n	80010a6 <_write_r+0x1e>
 80010a0:	682b      	ldr	r3, [r5, #0]
 80010a2:	b103      	cbz	r3, 80010a6 <_write_r+0x1e>
 80010a4:	6023      	str	r3, [r4, #0]
 80010a6:	bd38      	pop	{r3, r4, r5, pc}
 80010a8:	20000090 	.word	0x20000090

080010ac <__swsetup_r>:
 80010ac:	4b32      	ldr	r3, [pc, #200]	; (8001178 <__swsetup_r+0xcc>)
 80010ae:	b570      	push	{r4, r5, r6, lr}
 80010b0:	681d      	ldr	r5, [r3, #0]
 80010b2:	4606      	mov	r6, r0
 80010b4:	460c      	mov	r4, r1
 80010b6:	b125      	cbz	r5, 80010c2 <__swsetup_r+0x16>
 80010b8:	69ab      	ldr	r3, [r5, #24]
 80010ba:	b913      	cbnz	r3, 80010c2 <__swsetup_r+0x16>
 80010bc:	4628      	mov	r0, r5
 80010be:	f7ff fb1b 	bl	80006f8 <__sinit>
 80010c2:	4b2e      	ldr	r3, [pc, #184]	; (800117c <__swsetup_r+0xd0>)
 80010c4:	429c      	cmp	r4, r3
 80010c6:	d10f      	bne.n	80010e8 <__swsetup_r+0x3c>
 80010c8:	686c      	ldr	r4, [r5, #4]
 80010ca:	89a3      	ldrh	r3, [r4, #12]
 80010cc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010d0:	0719      	lsls	r1, r3, #28
 80010d2:	d42c      	bmi.n	800112e <__swsetup_r+0x82>
 80010d4:	06dd      	lsls	r5, r3, #27
 80010d6:	d411      	bmi.n	80010fc <__swsetup_r+0x50>
 80010d8:	2309      	movs	r3, #9
 80010da:	6033      	str	r3, [r6, #0]
 80010dc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80010e0:	81a3      	strh	r3, [r4, #12]
 80010e2:	f04f 30ff 	mov.w	r0, #4294967295
 80010e6:	e03e      	b.n	8001166 <__swsetup_r+0xba>
 80010e8:	4b25      	ldr	r3, [pc, #148]	; (8001180 <__swsetup_r+0xd4>)
 80010ea:	429c      	cmp	r4, r3
 80010ec:	d101      	bne.n	80010f2 <__swsetup_r+0x46>
 80010ee:	68ac      	ldr	r4, [r5, #8]
 80010f0:	e7eb      	b.n	80010ca <__swsetup_r+0x1e>
 80010f2:	4b24      	ldr	r3, [pc, #144]	; (8001184 <__swsetup_r+0xd8>)
 80010f4:	429c      	cmp	r4, r3
 80010f6:	bf08      	it	eq
 80010f8:	68ec      	ldreq	r4, [r5, #12]
 80010fa:	e7e6      	b.n	80010ca <__swsetup_r+0x1e>
 80010fc:	0758      	lsls	r0, r3, #29
 80010fe:	d512      	bpl.n	8001126 <__swsetup_r+0x7a>
 8001100:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001102:	b141      	cbz	r1, 8001116 <__swsetup_r+0x6a>
 8001104:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001108:	4299      	cmp	r1, r3
 800110a:	d002      	beq.n	8001112 <__swsetup_r+0x66>
 800110c:	4630      	mov	r0, r6
 800110e:	f000 f991 	bl	8001434 <_free_r>
 8001112:	2300      	movs	r3, #0
 8001114:	6363      	str	r3, [r4, #52]	; 0x34
 8001116:	89a3      	ldrh	r3, [r4, #12]
 8001118:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800111c:	81a3      	strh	r3, [r4, #12]
 800111e:	2300      	movs	r3, #0
 8001120:	6063      	str	r3, [r4, #4]
 8001122:	6923      	ldr	r3, [r4, #16]
 8001124:	6023      	str	r3, [r4, #0]
 8001126:	89a3      	ldrh	r3, [r4, #12]
 8001128:	f043 0308 	orr.w	r3, r3, #8
 800112c:	81a3      	strh	r3, [r4, #12]
 800112e:	6923      	ldr	r3, [r4, #16]
 8001130:	b94b      	cbnz	r3, 8001146 <__swsetup_r+0x9a>
 8001132:	89a3      	ldrh	r3, [r4, #12]
 8001134:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001138:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800113c:	d003      	beq.n	8001146 <__swsetup_r+0x9a>
 800113e:	4621      	mov	r1, r4
 8001140:	4630      	mov	r0, r6
 8001142:	f000 f92b 	bl	800139c <__smakebuf_r>
 8001146:	89a0      	ldrh	r0, [r4, #12]
 8001148:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800114c:	f010 0301 	ands.w	r3, r0, #1
 8001150:	d00a      	beq.n	8001168 <__swsetup_r+0xbc>
 8001152:	2300      	movs	r3, #0
 8001154:	60a3      	str	r3, [r4, #8]
 8001156:	6963      	ldr	r3, [r4, #20]
 8001158:	425b      	negs	r3, r3
 800115a:	61a3      	str	r3, [r4, #24]
 800115c:	6923      	ldr	r3, [r4, #16]
 800115e:	b943      	cbnz	r3, 8001172 <__swsetup_r+0xc6>
 8001160:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001164:	d1ba      	bne.n	80010dc <__swsetup_r+0x30>
 8001166:	bd70      	pop	{r4, r5, r6, pc}
 8001168:	0781      	lsls	r1, r0, #30
 800116a:	bf58      	it	pl
 800116c:	6963      	ldrpl	r3, [r4, #20]
 800116e:	60a3      	str	r3, [r4, #8]
 8001170:	e7f4      	b.n	800115c <__swsetup_r+0xb0>
 8001172:	2000      	movs	r0, #0
 8001174:	e7f7      	b.n	8001166 <__swsetup_r+0xba>
 8001176:	bf00      	nop
 8001178:	20000000 	.word	0x20000000
 800117c:	08001578 	.word	0x08001578
 8001180:	08001598 	.word	0x08001598
 8001184:	08001558 	.word	0x08001558

08001188 <_close_r>:
 8001188:	b538      	push	{r3, r4, r5, lr}
 800118a:	4d06      	ldr	r5, [pc, #24]	; (80011a4 <_close_r+0x1c>)
 800118c:	2300      	movs	r3, #0
 800118e:	4604      	mov	r4, r0
 8001190:	4608      	mov	r0, r1
 8001192:	602b      	str	r3, [r5, #0]
 8001194:	f7ff f97a 	bl	800048c <_close>
 8001198:	1c43      	adds	r3, r0, #1
 800119a:	d102      	bne.n	80011a2 <_close_r+0x1a>
 800119c:	682b      	ldr	r3, [r5, #0]
 800119e:	b103      	cbz	r3, 80011a2 <_close_r+0x1a>
 80011a0:	6023      	str	r3, [r4, #0]
 80011a2:	bd38      	pop	{r3, r4, r5, pc}
 80011a4:	20000090 	.word	0x20000090

080011a8 <__sflush_r>:
 80011a8:	898a      	ldrh	r2, [r1, #12]
 80011aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80011ae:	4605      	mov	r5, r0
 80011b0:	0710      	lsls	r0, r2, #28
 80011b2:	460c      	mov	r4, r1
 80011b4:	d458      	bmi.n	8001268 <__sflush_r+0xc0>
 80011b6:	684b      	ldr	r3, [r1, #4]
 80011b8:	2b00      	cmp	r3, #0
 80011ba:	dc05      	bgt.n	80011c8 <__sflush_r+0x20>
 80011bc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80011be:	2b00      	cmp	r3, #0
 80011c0:	dc02      	bgt.n	80011c8 <__sflush_r+0x20>
 80011c2:	2000      	movs	r0, #0
 80011c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80011c8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011ca:	2e00      	cmp	r6, #0
 80011cc:	d0f9      	beq.n	80011c2 <__sflush_r+0x1a>
 80011ce:	2300      	movs	r3, #0
 80011d0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80011d4:	682f      	ldr	r7, [r5, #0]
 80011d6:	602b      	str	r3, [r5, #0]
 80011d8:	d032      	beq.n	8001240 <__sflush_r+0x98>
 80011da:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80011dc:	89a3      	ldrh	r3, [r4, #12]
 80011de:	075a      	lsls	r2, r3, #29
 80011e0:	d505      	bpl.n	80011ee <__sflush_r+0x46>
 80011e2:	6863      	ldr	r3, [r4, #4]
 80011e4:	1ac0      	subs	r0, r0, r3
 80011e6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80011e8:	b10b      	cbz	r3, 80011ee <__sflush_r+0x46>
 80011ea:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80011ec:	1ac0      	subs	r0, r0, r3
 80011ee:	2300      	movs	r3, #0
 80011f0:	4602      	mov	r2, r0
 80011f2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011f4:	6a21      	ldr	r1, [r4, #32]
 80011f6:	4628      	mov	r0, r5
 80011f8:	47b0      	blx	r6
 80011fa:	1c43      	adds	r3, r0, #1
 80011fc:	89a3      	ldrh	r3, [r4, #12]
 80011fe:	d106      	bne.n	800120e <__sflush_r+0x66>
 8001200:	6829      	ldr	r1, [r5, #0]
 8001202:	291d      	cmp	r1, #29
 8001204:	d82c      	bhi.n	8001260 <__sflush_r+0xb8>
 8001206:	4a2a      	ldr	r2, [pc, #168]	; (80012b0 <__sflush_r+0x108>)
 8001208:	40ca      	lsrs	r2, r1
 800120a:	07d6      	lsls	r6, r2, #31
 800120c:	d528      	bpl.n	8001260 <__sflush_r+0xb8>
 800120e:	2200      	movs	r2, #0
 8001210:	6062      	str	r2, [r4, #4]
 8001212:	04d9      	lsls	r1, r3, #19
 8001214:	6922      	ldr	r2, [r4, #16]
 8001216:	6022      	str	r2, [r4, #0]
 8001218:	d504      	bpl.n	8001224 <__sflush_r+0x7c>
 800121a:	1c42      	adds	r2, r0, #1
 800121c:	d101      	bne.n	8001222 <__sflush_r+0x7a>
 800121e:	682b      	ldr	r3, [r5, #0]
 8001220:	b903      	cbnz	r3, 8001224 <__sflush_r+0x7c>
 8001222:	6560      	str	r0, [r4, #84]	; 0x54
 8001224:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001226:	602f      	str	r7, [r5, #0]
 8001228:	2900      	cmp	r1, #0
 800122a:	d0ca      	beq.n	80011c2 <__sflush_r+0x1a>
 800122c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001230:	4299      	cmp	r1, r3
 8001232:	d002      	beq.n	800123a <__sflush_r+0x92>
 8001234:	4628      	mov	r0, r5
 8001236:	f000 f8fd 	bl	8001434 <_free_r>
 800123a:	2000      	movs	r0, #0
 800123c:	6360      	str	r0, [r4, #52]	; 0x34
 800123e:	e7c1      	b.n	80011c4 <__sflush_r+0x1c>
 8001240:	6a21      	ldr	r1, [r4, #32]
 8001242:	2301      	movs	r3, #1
 8001244:	4628      	mov	r0, r5
 8001246:	47b0      	blx	r6
 8001248:	1c41      	adds	r1, r0, #1
 800124a:	d1c7      	bne.n	80011dc <__sflush_r+0x34>
 800124c:	682b      	ldr	r3, [r5, #0]
 800124e:	2b00      	cmp	r3, #0
 8001250:	d0c4      	beq.n	80011dc <__sflush_r+0x34>
 8001252:	2b1d      	cmp	r3, #29
 8001254:	d001      	beq.n	800125a <__sflush_r+0xb2>
 8001256:	2b16      	cmp	r3, #22
 8001258:	d101      	bne.n	800125e <__sflush_r+0xb6>
 800125a:	602f      	str	r7, [r5, #0]
 800125c:	e7b1      	b.n	80011c2 <__sflush_r+0x1a>
 800125e:	89a3      	ldrh	r3, [r4, #12]
 8001260:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001264:	81a3      	strh	r3, [r4, #12]
 8001266:	e7ad      	b.n	80011c4 <__sflush_r+0x1c>
 8001268:	690f      	ldr	r7, [r1, #16]
 800126a:	2f00      	cmp	r7, #0
 800126c:	d0a9      	beq.n	80011c2 <__sflush_r+0x1a>
 800126e:	0793      	lsls	r3, r2, #30
 8001270:	680e      	ldr	r6, [r1, #0]
 8001272:	bf08      	it	eq
 8001274:	694b      	ldreq	r3, [r1, #20]
 8001276:	600f      	str	r7, [r1, #0]
 8001278:	bf18      	it	ne
 800127a:	2300      	movne	r3, #0
 800127c:	eba6 0807 	sub.w	r8, r6, r7
 8001280:	608b      	str	r3, [r1, #8]
 8001282:	f1b8 0f00 	cmp.w	r8, #0
 8001286:	dd9c      	ble.n	80011c2 <__sflush_r+0x1a>
 8001288:	6a21      	ldr	r1, [r4, #32]
 800128a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800128c:	4643      	mov	r3, r8
 800128e:	463a      	mov	r2, r7
 8001290:	4628      	mov	r0, r5
 8001292:	47b0      	blx	r6
 8001294:	2800      	cmp	r0, #0
 8001296:	dc06      	bgt.n	80012a6 <__sflush_r+0xfe>
 8001298:	89a3      	ldrh	r3, [r4, #12]
 800129a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800129e:	81a3      	strh	r3, [r4, #12]
 80012a0:	f04f 30ff 	mov.w	r0, #4294967295
 80012a4:	e78e      	b.n	80011c4 <__sflush_r+0x1c>
 80012a6:	4407      	add	r7, r0
 80012a8:	eba8 0800 	sub.w	r8, r8, r0
 80012ac:	e7e9      	b.n	8001282 <__sflush_r+0xda>
 80012ae:	bf00      	nop
 80012b0:	20400001 	.word	0x20400001

080012b4 <_fflush_r>:
 80012b4:	b538      	push	{r3, r4, r5, lr}
 80012b6:	690b      	ldr	r3, [r1, #16]
 80012b8:	4605      	mov	r5, r0
 80012ba:	460c      	mov	r4, r1
 80012bc:	b913      	cbnz	r3, 80012c4 <_fflush_r+0x10>
 80012be:	2500      	movs	r5, #0
 80012c0:	4628      	mov	r0, r5
 80012c2:	bd38      	pop	{r3, r4, r5, pc}
 80012c4:	b118      	cbz	r0, 80012ce <_fflush_r+0x1a>
 80012c6:	6983      	ldr	r3, [r0, #24]
 80012c8:	b90b      	cbnz	r3, 80012ce <_fflush_r+0x1a>
 80012ca:	f7ff fa15 	bl	80006f8 <__sinit>
 80012ce:	4b14      	ldr	r3, [pc, #80]	; (8001320 <_fflush_r+0x6c>)
 80012d0:	429c      	cmp	r4, r3
 80012d2:	d11b      	bne.n	800130c <_fflush_r+0x58>
 80012d4:	686c      	ldr	r4, [r5, #4]
 80012d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012da:	2b00      	cmp	r3, #0
 80012dc:	d0ef      	beq.n	80012be <_fflush_r+0xa>
 80012de:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80012e0:	07d0      	lsls	r0, r2, #31
 80012e2:	d404      	bmi.n	80012ee <_fflush_r+0x3a>
 80012e4:	0599      	lsls	r1, r3, #22
 80012e6:	d402      	bmi.n	80012ee <_fflush_r+0x3a>
 80012e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012ea:	f7ff faa3 	bl	8000834 <__retarget_lock_acquire_recursive>
 80012ee:	4628      	mov	r0, r5
 80012f0:	4621      	mov	r1, r4
 80012f2:	f7ff ff59 	bl	80011a8 <__sflush_r>
 80012f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012f8:	07da      	lsls	r2, r3, #31
 80012fa:	4605      	mov	r5, r0
 80012fc:	d4e0      	bmi.n	80012c0 <_fflush_r+0xc>
 80012fe:	89a3      	ldrh	r3, [r4, #12]
 8001300:	059b      	lsls	r3, r3, #22
 8001302:	d4dd      	bmi.n	80012c0 <_fflush_r+0xc>
 8001304:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001306:	f7ff fa96 	bl	8000836 <__retarget_lock_release_recursive>
 800130a:	e7d9      	b.n	80012c0 <_fflush_r+0xc>
 800130c:	4b05      	ldr	r3, [pc, #20]	; (8001324 <_fflush_r+0x70>)
 800130e:	429c      	cmp	r4, r3
 8001310:	d101      	bne.n	8001316 <_fflush_r+0x62>
 8001312:	68ac      	ldr	r4, [r5, #8]
 8001314:	e7df      	b.n	80012d6 <_fflush_r+0x22>
 8001316:	4b04      	ldr	r3, [pc, #16]	; (8001328 <_fflush_r+0x74>)
 8001318:	429c      	cmp	r4, r3
 800131a:	bf08      	it	eq
 800131c:	68ec      	ldreq	r4, [r5, #12]
 800131e:	e7da      	b.n	80012d6 <_fflush_r+0x22>
 8001320:	08001578 	.word	0x08001578
 8001324:	08001598 	.word	0x08001598
 8001328:	08001558 	.word	0x08001558

0800132c <_lseek_r>:
 800132c:	b538      	push	{r3, r4, r5, lr}
 800132e:	4d07      	ldr	r5, [pc, #28]	; (800134c <_lseek_r+0x20>)
 8001330:	4604      	mov	r4, r0
 8001332:	4608      	mov	r0, r1
 8001334:	4611      	mov	r1, r2
 8001336:	2200      	movs	r2, #0
 8001338:	602a      	str	r2, [r5, #0]
 800133a:	461a      	mov	r2, r3
 800133c:	f7ff f8cd 	bl	80004da <_lseek>
 8001340:	1c43      	adds	r3, r0, #1
 8001342:	d102      	bne.n	800134a <_lseek_r+0x1e>
 8001344:	682b      	ldr	r3, [r5, #0]
 8001346:	b103      	cbz	r3, 800134a <_lseek_r+0x1e>
 8001348:	6023      	str	r3, [r4, #0]
 800134a:	bd38      	pop	{r3, r4, r5, pc}
 800134c:	20000090 	.word	0x20000090

08001350 <__swhatbuf_r>:
 8001350:	b570      	push	{r4, r5, r6, lr}
 8001352:	460e      	mov	r6, r1
 8001354:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001358:	2900      	cmp	r1, #0
 800135a:	b096      	sub	sp, #88	; 0x58
 800135c:	4614      	mov	r4, r2
 800135e:	461d      	mov	r5, r3
 8001360:	da08      	bge.n	8001374 <__swhatbuf_r+0x24>
 8001362:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8001366:	2200      	movs	r2, #0
 8001368:	602a      	str	r2, [r5, #0]
 800136a:	061a      	lsls	r2, r3, #24
 800136c:	d410      	bmi.n	8001390 <__swhatbuf_r+0x40>
 800136e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001372:	e00e      	b.n	8001392 <__swhatbuf_r+0x42>
 8001374:	466a      	mov	r2, sp
 8001376:	f000 f8bb 	bl	80014f0 <_fstat_r>
 800137a:	2800      	cmp	r0, #0
 800137c:	dbf1      	blt.n	8001362 <__swhatbuf_r+0x12>
 800137e:	9a01      	ldr	r2, [sp, #4]
 8001380:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001384:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001388:	425a      	negs	r2, r3
 800138a:	415a      	adcs	r2, r3
 800138c:	602a      	str	r2, [r5, #0]
 800138e:	e7ee      	b.n	800136e <__swhatbuf_r+0x1e>
 8001390:	2340      	movs	r3, #64	; 0x40
 8001392:	2000      	movs	r0, #0
 8001394:	6023      	str	r3, [r4, #0]
 8001396:	b016      	add	sp, #88	; 0x58
 8001398:	bd70      	pop	{r4, r5, r6, pc}
	...

0800139c <__smakebuf_r>:
 800139c:	898b      	ldrh	r3, [r1, #12]
 800139e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80013a0:	079d      	lsls	r5, r3, #30
 80013a2:	4606      	mov	r6, r0
 80013a4:	460c      	mov	r4, r1
 80013a6:	d507      	bpl.n	80013b8 <__smakebuf_r+0x1c>
 80013a8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80013ac:	6023      	str	r3, [r4, #0]
 80013ae:	6123      	str	r3, [r4, #16]
 80013b0:	2301      	movs	r3, #1
 80013b2:	6163      	str	r3, [r4, #20]
 80013b4:	b002      	add	sp, #8
 80013b6:	bd70      	pop	{r4, r5, r6, pc}
 80013b8:	ab01      	add	r3, sp, #4
 80013ba:	466a      	mov	r2, sp
 80013bc:	f7ff ffc8 	bl	8001350 <__swhatbuf_r>
 80013c0:	9900      	ldr	r1, [sp, #0]
 80013c2:	4605      	mov	r5, r0
 80013c4:	4630      	mov	r0, r6
 80013c6:	f7ff fa57 	bl	8000878 <_malloc_r>
 80013ca:	b948      	cbnz	r0, 80013e0 <__smakebuf_r+0x44>
 80013cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013d0:	059a      	lsls	r2, r3, #22
 80013d2:	d4ef      	bmi.n	80013b4 <__smakebuf_r+0x18>
 80013d4:	f023 0303 	bic.w	r3, r3, #3
 80013d8:	f043 0302 	orr.w	r3, r3, #2
 80013dc:	81a3      	strh	r3, [r4, #12]
 80013de:	e7e3      	b.n	80013a8 <__smakebuf_r+0xc>
 80013e0:	4b0d      	ldr	r3, [pc, #52]	; (8001418 <__smakebuf_r+0x7c>)
 80013e2:	62b3      	str	r3, [r6, #40]	; 0x28
 80013e4:	89a3      	ldrh	r3, [r4, #12]
 80013e6:	6020      	str	r0, [r4, #0]
 80013e8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80013ec:	81a3      	strh	r3, [r4, #12]
 80013ee:	9b00      	ldr	r3, [sp, #0]
 80013f0:	6163      	str	r3, [r4, #20]
 80013f2:	9b01      	ldr	r3, [sp, #4]
 80013f4:	6120      	str	r0, [r4, #16]
 80013f6:	b15b      	cbz	r3, 8001410 <__smakebuf_r+0x74>
 80013f8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013fc:	4630      	mov	r0, r6
 80013fe:	f000 f889 	bl	8001514 <_isatty_r>
 8001402:	b128      	cbz	r0, 8001410 <__smakebuf_r+0x74>
 8001404:	89a3      	ldrh	r3, [r4, #12]
 8001406:	f023 0303 	bic.w	r3, r3, #3
 800140a:	f043 0301 	orr.w	r3, r3, #1
 800140e:	81a3      	strh	r3, [r4, #12]
 8001410:	89a0      	ldrh	r0, [r4, #12]
 8001412:	4305      	orrs	r5, r0
 8001414:	81a5      	strh	r5, [r4, #12]
 8001416:	e7cd      	b.n	80013b4 <__smakebuf_r+0x18>
 8001418:	08000691 	.word	0x08000691

0800141c <__malloc_lock>:
 800141c:	4801      	ldr	r0, [pc, #4]	; (8001424 <__malloc_lock+0x8>)
 800141e:	f7ff ba09 	b.w	8000834 <__retarget_lock_acquire_recursive>
 8001422:	bf00      	nop
 8001424:	20000084 	.word	0x20000084

08001428 <__malloc_unlock>:
 8001428:	4801      	ldr	r0, [pc, #4]	; (8001430 <__malloc_unlock+0x8>)
 800142a:	f7ff ba04 	b.w	8000836 <__retarget_lock_release_recursive>
 800142e:	bf00      	nop
 8001430:	20000084 	.word	0x20000084

08001434 <_free_r>:
 8001434:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001436:	2900      	cmp	r1, #0
 8001438:	d044      	beq.n	80014c4 <_free_r+0x90>
 800143a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800143e:	9001      	str	r0, [sp, #4]
 8001440:	2b00      	cmp	r3, #0
 8001442:	f1a1 0404 	sub.w	r4, r1, #4
 8001446:	bfb8      	it	lt
 8001448:	18e4      	addlt	r4, r4, r3
 800144a:	f7ff ffe7 	bl	800141c <__malloc_lock>
 800144e:	4a1e      	ldr	r2, [pc, #120]	; (80014c8 <_free_r+0x94>)
 8001450:	9801      	ldr	r0, [sp, #4]
 8001452:	6813      	ldr	r3, [r2, #0]
 8001454:	b933      	cbnz	r3, 8001464 <_free_r+0x30>
 8001456:	6063      	str	r3, [r4, #4]
 8001458:	6014      	str	r4, [r2, #0]
 800145a:	b003      	add	sp, #12
 800145c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001460:	f7ff bfe2 	b.w	8001428 <__malloc_unlock>
 8001464:	42a3      	cmp	r3, r4
 8001466:	d908      	bls.n	800147a <_free_r+0x46>
 8001468:	6825      	ldr	r5, [r4, #0]
 800146a:	1961      	adds	r1, r4, r5
 800146c:	428b      	cmp	r3, r1
 800146e:	bf01      	itttt	eq
 8001470:	6819      	ldreq	r1, [r3, #0]
 8001472:	685b      	ldreq	r3, [r3, #4]
 8001474:	1949      	addeq	r1, r1, r5
 8001476:	6021      	streq	r1, [r4, #0]
 8001478:	e7ed      	b.n	8001456 <_free_r+0x22>
 800147a:	461a      	mov	r2, r3
 800147c:	685b      	ldr	r3, [r3, #4]
 800147e:	b10b      	cbz	r3, 8001484 <_free_r+0x50>
 8001480:	42a3      	cmp	r3, r4
 8001482:	d9fa      	bls.n	800147a <_free_r+0x46>
 8001484:	6811      	ldr	r1, [r2, #0]
 8001486:	1855      	adds	r5, r2, r1
 8001488:	42a5      	cmp	r5, r4
 800148a:	d10b      	bne.n	80014a4 <_free_r+0x70>
 800148c:	6824      	ldr	r4, [r4, #0]
 800148e:	4421      	add	r1, r4
 8001490:	1854      	adds	r4, r2, r1
 8001492:	42a3      	cmp	r3, r4
 8001494:	6011      	str	r1, [r2, #0]
 8001496:	d1e0      	bne.n	800145a <_free_r+0x26>
 8001498:	681c      	ldr	r4, [r3, #0]
 800149a:	685b      	ldr	r3, [r3, #4]
 800149c:	6053      	str	r3, [r2, #4]
 800149e:	4421      	add	r1, r4
 80014a0:	6011      	str	r1, [r2, #0]
 80014a2:	e7da      	b.n	800145a <_free_r+0x26>
 80014a4:	d902      	bls.n	80014ac <_free_r+0x78>
 80014a6:	230c      	movs	r3, #12
 80014a8:	6003      	str	r3, [r0, #0]
 80014aa:	e7d6      	b.n	800145a <_free_r+0x26>
 80014ac:	6825      	ldr	r5, [r4, #0]
 80014ae:	1961      	adds	r1, r4, r5
 80014b0:	428b      	cmp	r3, r1
 80014b2:	bf04      	itt	eq
 80014b4:	6819      	ldreq	r1, [r3, #0]
 80014b6:	685b      	ldreq	r3, [r3, #4]
 80014b8:	6063      	str	r3, [r4, #4]
 80014ba:	bf04      	itt	eq
 80014bc:	1949      	addeq	r1, r1, r5
 80014be:	6021      	streq	r1, [r4, #0]
 80014c0:	6054      	str	r4, [r2, #4]
 80014c2:	e7ca      	b.n	800145a <_free_r+0x26>
 80014c4:	b003      	add	sp, #12
 80014c6:	bd30      	pop	{r4, r5, pc}
 80014c8:	20000088 	.word	0x20000088

080014cc <_read_r>:
 80014cc:	b538      	push	{r3, r4, r5, lr}
 80014ce:	4d07      	ldr	r5, [pc, #28]	; (80014ec <_read_r+0x20>)
 80014d0:	4604      	mov	r4, r0
 80014d2:	4608      	mov	r0, r1
 80014d4:	4611      	mov	r1, r2
 80014d6:	2200      	movs	r2, #0
 80014d8:	602a      	str	r2, [r5, #0]
 80014da:	461a      	mov	r2, r3
 80014dc:	f7fe ff9d 	bl	800041a <_read>
 80014e0:	1c43      	adds	r3, r0, #1
 80014e2:	d102      	bne.n	80014ea <_read_r+0x1e>
 80014e4:	682b      	ldr	r3, [r5, #0]
 80014e6:	b103      	cbz	r3, 80014ea <_read_r+0x1e>
 80014e8:	6023      	str	r3, [r4, #0]
 80014ea:	bd38      	pop	{r3, r4, r5, pc}
 80014ec:	20000090 	.word	0x20000090

080014f0 <_fstat_r>:
 80014f0:	b538      	push	{r3, r4, r5, lr}
 80014f2:	4d07      	ldr	r5, [pc, #28]	; (8001510 <_fstat_r+0x20>)
 80014f4:	2300      	movs	r3, #0
 80014f6:	4604      	mov	r4, r0
 80014f8:	4608      	mov	r0, r1
 80014fa:	4611      	mov	r1, r2
 80014fc:	602b      	str	r3, [r5, #0]
 80014fe:	f7fe ffd1 	bl	80004a4 <_fstat>
 8001502:	1c43      	adds	r3, r0, #1
 8001504:	d102      	bne.n	800150c <_fstat_r+0x1c>
 8001506:	682b      	ldr	r3, [r5, #0]
 8001508:	b103      	cbz	r3, 800150c <_fstat_r+0x1c>
 800150a:	6023      	str	r3, [r4, #0]
 800150c:	bd38      	pop	{r3, r4, r5, pc}
 800150e:	bf00      	nop
 8001510:	20000090 	.word	0x20000090

08001514 <_isatty_r>:
 8001514:	b538      	push	{r3, r4, r5, lr}
 8001516:	4d06      	ldr	r5, [pc, #24]	; (8001530 <_isatty_r+0x1c>)
 8001518:	2300      	movs	r3, #0
 800151a:	4604      	mov	r4, r0
 800151c:	4608      	mov	r0, r1
 800151e:	602b      	str	r3, [r5, #0]
 8001520:	f7fe ffd0 	bl	80004c4 <_isatty>
 8001524:	1c43      	adds	r3, r0, #1
 8001526:	d102      	bne.n	800152e <_isatty_r+0x1a>
 8001528:	682b      	ldr	r3, [r5, #0]
 800152a:	b103      	cbz	r3, 800152e <_isatty_r+0x1a>
 800152c:	6023      	str	r3, [r4, #0]
 800152e:	bd38      	pop	{r3, r4, r5, pc}
 8001530:	20000090 	.word	0x20000090

08001534 <_init>:
 8001534:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001536:	bf00      	nop
 8001538:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800153a:	bc08      	pop	{r3}
 800153c:	469e      	mov	lr, r3
 800153e:	4770      	bx	lr

08001540 <_fini>:
 8001540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001542:	bf00      	nop
 8001544:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001546:	bc08      	pop	{r3}
 8001548:	469e      	mov	lr, r3
 800154a:	4770      	bx	lr
